{"version":3,"sources":["assets/images/quizzler logo.png","assets/images/wolf.svg","layouts/login/navbar/navbarLanding.js","layouts/login/login.js","layouts/landingPage/sections/navbar/navbarLanding.js","layouts/landingPage/sections/masterHeader/mastheader.js","layouts/landingPage/sections/aboutSection/about.js","layouts/landingPage/sections/servicess/service.js","layouts/landingPage/sections/creator/creator.js","layouts/landingPage/sections/contact/contact.js","layouts/landingPage/sections/footer/footer.js","layouts/landingPage/landingPage.js","layouts/signupUser/navbar/navbarLanding.js","layouts/signupUser/signupUser.js","layouts/signupCreator/navbar/navbarLanding.js","layouts/signupCreator/signupCreator.js","layouts/creatorLobby/navbar/navbarLanding.js","layouts/creatorLobby/creatorLobby.js","layouts/userLobby/navbar/navbarLanding.js","layouts/userLobby/UserLobby.js","layouts/Quizzler/component/clock/clock.js","layouts/Quizzler/Quizzler.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","React","memo","history","useHistory","redirect","path","push","className","id","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onClick","useState","email","setEmail","password","setPassword","userType","setUserType","popupContent","setPopupContent","show","setShow","handleClose","handleShow","responseGoogle","response","error","console","log","profileObj","name","formData","Email","axios","post","QueryString","headers","then","data","catch","onSubmit","event","preventDefault","Password","Type","config","placeholder","value","required","autoFocus","onChange","e","target","clientId","buttonText","onSuccess","onFailure","cookiePolicy","Modal","onHide","backdrop","keyboard","centered","Header","closeButton","Title","Body","Footer","Button","variant","src","wolf","alt","fname","setFname","passwordTest","setpasswordTest","Name","match","length","document","getElementById","innerHTML","setName","phoneNumber","setPhoneNumber","PhoneNumber","maxLength","createName","setCreateName","createRelatedTo","setCreateRelatedTo","createNoOfQuestions","setCreateNoOfQuestions","createTime","setCreateTime","createPrivate","setCreatePrivate","createQuestions","setCreateQuestions","deleteQuizID","setDeleteQuizID","infoGlobalQuizID","setInfoGlobalQuiID","createQuizPopup","setCreateQuizPopup","createSwitchContent","setCreateSwitchContent","handleCreatePopupClose","deleteQuizPopup","setDeleteQuizPopup","handleDeletePopupClose","infoQuizGlobalPopup","setInfoGlobalPopup","handleInfoGlobalPopupClose","submitCreate","CreatorID","QuizName","QuizRelatedTo","QuizNOofQuestions","Time","Private","Questions","alert","size","htmlFor","arraydata","i","No","question","QImageLink","option1","option2","option3","option4","answer","map","entry","index","key","payload","QuizID","submitDeleteQuiz","CreatroID","submitInfoGlobalQuiz","props","useParams","uid","uname","quizData","setQuizData","quizID","setQuizID","ID","arrayModifier","SubmitQuizID","get","_id","relatedTo","hostedBy","Clock","time","seconds","minutes","Math","floor","toString","this","format","Component","answers","setAnswers","ansDone","setAnsDone","timer","setTimer","timerActive","setTimerActive","fullscreen","setFullscreen","modalInstructions","setModalInstructions","message","setMessage","modalMessage","setModalMessage","handleShowMessage","screen1","useFullScreenHandle","reportChange","useCallback","state","handle","violationSubmit","fullscreenFunc","enter","exit","useEffect","setTimeout","timeoutTrigger","submitTimeout","ansScrapper","dummyfill","questions","formDatas","QID","UID","UName","Status","Score","scoreObtained","tempAns","flagSubmit","submitQuizDataHandler","App","exact","Boolean","window","location","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.31c221e8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/quizzler logo.c41dda3f.png\";","module.exports = __webpack_public_path__ + \"static/media/wolf.8f1222e9.svg\";","import React from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Navbar=()=>{\r\n    let history = useHistory();\r\n    const redirect=(path)=>{\r\n        history.push(path)\r\n    }\r\n    return(\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-primary-custom fixed-top py-3\" id=\"mainNav\">\r\n            <div className=\"container\">\r\n                <a className=\"navbar-brand  text-primary\" href=\"#page-top\">Quizzler</a>\r\n                <button className=\"navbar-toggler navbar-toggler-right text-primary\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><span className=\"navbar-toggler-icon\"></span></button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n                    <ul className=\"navbar-nav ml-auto my-2 my-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a \r\n                                className=\"nav-link text-dark\" \r\n                                onClick={()=>{\r\n                                    redirect(\"/\")\r\n                                }}\r\n                            >Home</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a \r\n                                className=\"nav-link text-dark\" \r\n                                onClick={()=>{\r\n                                    redirect(\"/#contact\")\r\n                                }}\r\n                            >Contact</a>\r\n                        </li>\r\n                        <li  className=\"nav-item\">\r\n                            <a className=\"nav-link text-success\" \r\n                                onClick={()=>{\r\n                                    redirect(\"/user-signup\")\r\n                                }}\r\n                            >Sign-up</a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default React.memo(Navbar);","import React,{useState} from 'react'\r\nimport GoogleLogin from 'react-google-login'\r\nimport './login.css'\r\nimport logo from '../../assets/images/quizzler logo.png'\r\nimport Navbar from './navbar/navbarLanding'\r\nimport axios from 'axios'\r\nimport * as QueryString from \"query-string\"\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst Login =()=>{\r\n    let history = useHistory();\r\n    const redirect=(path)=>{\r\n        history.push(path)\r\n    }\r\n\r\n    const [email,setEmail]=useState(\"\")\r\n    const [password,setPassword]=useState(\"\")\r\n    const [userType, setUserType] = useState(\"user\")\r\n\r\n    \r\n\r\n    const [popupContent,setPopupContent]=useState(\"\")\r\n\r\n    // states and function for the modal\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const responseGoogle = (response) => {\r\n        if(response.error){\r\n            console.log(\"error\")\r\n        }else{\r\n            console.log(response.profileObj.email);\r\n            console.log(response.profileObj.name);\r\n            //send these data to the server..\r\n             // axios \r\n             let formData = {Email: response.profileObj.email};    \r\n             // console.log(QueryString.stringify(formData));  \r\n             //header configuration for the CORS\r\n             const config  = {\r\n                     headers: {\r\n                         'Content-Type': 'application/x-www-form-urlencoded',\r\n                         'Access-Control-Allow-Origin':'*'\r\n                     }}\r\n                     axios.post('https://quizzlerserver.herokuapp.com/loginGoogleUser', \r\n                     QueryString.stringify(formData),config)\r\n                     .then(function (response) {\r\n                        //  console.log(response.data);\r\n                        if(response.data.id){\r\n                            redirect(\"/ul/\"+response.data.id+\"/\"+response.data.name);\r\n                        }else{\r\n                            setPopupContent(response.data);\r\n                            handleShow();\r\n                        }                                                 \r\n                     })\r\n                     .catch(function (error) {\r\n                        setPopupContent(\"Oh snap! Something went wrong, try again.\");\r\n                        handleShow();\r\n                        //  console.log(error);\r\n                     });\r\n        }\r\n      }\r\n\r\n\r\n//submit handler for the website signup\r\nconst submitHandlerLogin=(event)=>{\r\n    event.preventDefault();\r\n    \r\n         // axios \r\n         let formData = {Email: email,Password: password,Type:userType};    \r\n         // console.log(QueryString.stringify(formData));  \r\n         //header configuration for the CORS\r\n         const config  = {\r\n                 headers: {\r\n                     'Content-Type': 'application/x-www-form-urlencoded',\r\n                     'Access-Control-Allow-Origin':'*'\r\n                 }}\r\n        if(userType===\"user\"){\r\n            axios.post('https://quizzlerserver.herokuapp.com/loginWebsiteUser', \r\n            QueryString.stringify(formData),config)\r\n            .then(function (response) {\r\n                // console.log(response.data);\r\n                setPopupContent(response.data);\r\n                //redirect to the userdash\r\n                if(response.data.id){\r\n                    redirect(\"/ul/\"+response.data.id+\"/\"+response.data.name);\r\n                }else{\r\n                    setPopupContent(response.data)\r\n                    handleShow()\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                setPopupContent(\"Oh snap! Something went wrong, Try again.\");\r\n                handleShow();\r\n            });\r\n        }else if(userType===\"creator\"){\r\n            axios.post('https://quizzlerserver.herokuapp.com/loginWebsiteCreator', \r\n            QueryString.stringify(formData),config)\r\n            .then(function (response) {\r\n                if(response.data.id){\r\n                    redirect(\"/cl/\"+response.data.id+\"/\"+response.data.name);\r\n                }else{\r\n                    setPopupContent(response.data);\r\n                    handleShow();\r\n                }                \r\n            })\r\n            .catch(function (error) {\r\n                setPopupContent(\"Oh snap! Something went wrong, Try again.\");\r\n                handleShow();\r\n            });\r\n        }       \r\n}      \r\n\r\n    return(\r\n        <div>\r\n        <Navbar/>\r\n        <div className=\"text-center\" id=\"login\">\r\n            <form \r\n                className=\"form-signin card\" \r\n                onSubmit={submitHandlerLogin}>\r\n                {/* <img className=\"mb-1\" src={logo} alt=\"\" width=\"120\" height=\"60\"/> */}\r\n                <h1 className=\"h3 mb-3 font-weight-bold text-primary\">LOGIN</h1>\r\n                <label className=\"sr-only\">Email address</label>\r\n                <input \r\n                    type=\"email\" \r\n                    id=\"inputEmail\" \r\n                    className=\"form-control text-primary\" \r\n                    placeholder=\"Email address\" \r\n                    value={email}\r\n                    required \r\n                    autoFocus\r\n                    onChange={(e)=>{\r\n                        setEmail(e.target.value)\r\n                    }}    \r\n                    />\r\n                <label className=\"sr-only\">Password</label>\r\n                <input \r\n                    type=\"password\" \r\n                    id=\"inputPassword\" \r\n                    className=\"form-control text-primary\" \r\n                    placeholder=\"Password\" \r\n                    value={password}\r\n                    required\r\n                    onChange={(e)=>{\r\n                        setPassword(e.target.value);\r\n                    }}\r\n                    />\r\n                <div className=\"form-group\">\r\n                <label className=\"sr-only\">User Type</label>\r\n                <select \r\n                    className=\"form-control text-primary\" \r\n                    id=\"userType\"\r\n                    value={userType}\r\n                    onChange={(e)=>{\r\n                        setUserType(e.target.value)\r\n                    }}\r\n                    >\r\n                    <option>user</option>\r\n                    <option>creator</option>\r\n                </select>\r\n                </div>\r\n                \r\n                <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\r\n                <div className=\"mt-2\"><a href=\"#\" className=\"text-danger\">Reset password</a></div>\r\n                \r\n                <hr/>\r\n                {/* <p className=\"text-secondary\">or</p> */}\r\n                <h6 className=\"text-secondary\">Google auth is for users only</h6>\r\n                <GoogleLogin\r\n                    clientId=\"987356181579-d89ri7e77o4373stfrjo4ie6o6lqgfpl.apps.googleusercontent.com\"\r\n                    buttonText=\"Login with Google\"\r\n                    onSuccess={responseGoogle}\r\n                    onFailure={responseGoogle}\r\n                    cookiePolicy={'single_host_origin'}\r\n                />\r\n            </form>\r\n        </div>\r\n         {/* popup  */}\r\n        <Modal\r\n            show={show}\r\n            onHide={handleClose}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n            centered\r\n            >\r\n            <Modal.Header closeButton>\r\n            <Modal.Title>Quizzler</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {popupContent}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n            <Button variant=\"primary\" onClick={handleClose}>\r\n                Close\r\n            </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n        </div>\r\n    )\r\n}\r\nexport default React.memo(Login)","import React from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Login from '../../../login/login'\r\nconst Navbar=()=>{\r\n    let history = useHistory();\r\n    const redirect=(path)=>{\r\n        history.push(path)\r\n    }\r\n    return(\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-primary-custom fixed-top py-3\" id=\"mainNav\">\r\n            <div className=\"container\">\r\n                <a className=\"navbar-brand text-light\" href=\"#page-top\">Quizzler</a>\r\n                <button className=\"navbar-toggler navbar-toggler-right text-primary\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><span className=\"navbar-toggler-icon\"></span></button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n                    <ul className=\"navbar-nav ml-auto my-2 my-lg-0\">\r\n                        \r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link text-dark\" href=\"#about\">About</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link text-dark\" href=\"#services\">Services</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link text-dark\" href=\"#contact\">Contact</a>\r\n                        </li>\r\n                        <li  className=\"nav-item\">\r\n                            <a \r\n                                className=\"nav-link text-primary\" \r\n                                onClick={()=>{\r\n                                    redirect(\"/login\");\r\n                                }}\r\n                                >Login</a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default React.memo(Navbar);","import React from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport './mastheader.css'\r\n\r\nconst MastHeader=()=>{\r\n    let history = useHistory();\r\n    const redirect=(path)=>{\r\n        history.push(path)\r\n    }\r\n    return(\r\n    <header className=\"masthead\">\r\n        <div className=\"container h-100\">\r\n            <div className=\"row h-100 align-items-center justify-content-center text-center\">\r\n                <div className=\"col-lg-10 align-self-end\">\r\n                    <h1 className=\"text-uppercase text-white font-weight-bold\">Quizzler</h1>\r\n                    <hr className=\"divider my-4\" />\r\n                </div>\r\n                <div className=\"col-lg-8 align-self-baseline\">\r\n                    <p className=\"text-white font-weight-light mb-5\">Welcome to the World of Quizzes.</p>\r\n                    {/* <br/>Compete across various Quizzes or Host your own Quizzes. */}\r\n                    <h4 className=\"text-white-50 font-weight-light mb-5\">Join with us</h4>\r\n                    <button \r\n                        className=\"btn btn-outline-success btn-xl loginbutton-user\" \r\n                        onClick={()=>{\r\n                            redirect(\"/user-signup\");\r\n                        }}\r\n                        >User</button>\r\n                    {/* <p className=\"text-white-50 font-weight-light mb-5\">or</p> */}\r\n                    <button \r\n                        className=\"btn btn-outline-primary btn-xl loginbutton-creator\" \r\n                        onClick={()=>{\r\n                            redirect(\"/creator-signup\")\r\n                        }}\r\n                        >Creator</button>\r\n                    <p className=\"text-white font-weight-light mt-5\">Already have an Account \r\n                        <button \r\n                            className=\"btn btn-primary btn-sm loginbutton\"\r\n                            onClick={()=>{\r\n                                redirect(\"/login\")\r\n                            }}    \r\n                        >login</button>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </header>\r\n    )\r\n}\r\nexport default React.memo(MastHeader)","import React from 'react'\r\n\r\nconst About =()=>{\r\n    return(\r\n        <section className=\"page-section bg-primary\" id=\"about\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-lg-8 text-center\">\r\n                        <h2 className=\"text-white mt-0\">Learn to Love to Learn!</h2>\r\n                        <hr className=\"divider light my-4\" />\r\n                        <h5 className=\"text-white-50 mb-4\">Join us Today for a better Tommorrow.</h5>\r\n                        <h5 className=\"text-white-50 mb-4\">A platform to Compete, Learn and Teach for free!</h5>\r\n                        {/* <hr className=\"light my-4\"/> */}\r\n                        {/* <h3 className=\"text-white mb-4\">DEDICATED TO</h3>\r\n                        <h4 className=\"text-white-50\">Divya Sri</h4>\r\n                        <h5 className=\"text-white-50 mb-4\">A Kind Hearted soul and Caring person. Your Memories will last with me forever. Rest In Peace.</h5> */}\r\n                        {/* <a className=\"btn btn-light btn-xl js-scroll-trigger\" href=\"#services\">Get Started!</a> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\nexport default React.memo(About);","import React from 'react'\r\n\r\nconst Service =()=>{\r\n    return(\r\n        <section className=\"page-section\" id=\"services\">\r\n            <div className=\"container\">\r\n                <h2 className=\"text-center mt-0\">At Your Service</h2>\r\n                <hr className=\"divider my-4\" />\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-3 col-md-6 text-center\">\r\n                        <div className=\"mt-5\">\r\n                            <i className=\"fas fa-4x fa-gem text-primary mb-4\"></i>\r\n                            <h3 className=\"h4 mb-2\">Free for All</h3>\r\n                            <p className=\"text-muted mb-0\">All the services are provided absolutely free! </p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-3 col-md-6 text-center\">\r\n                        <div className=\"mt-5\">\r\n                            <i className=\"fas fa-4x fa-laptop-code text-primary mb-4\"></i>\r\n                            <h3 className=\"h4 mb-2\">Anti Cheat Mechanism</h3>\r\n                            <p className=\"text-muted mb-0\">Entire Session are monitored carefully to detect any Malpractice.</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-3 col-md-6 text-center\">\r\n                        <div className=\"mt-5\">\r\n                            <i className=\"fas fa-4x fa-globe text-primary mb-4\"></i>\r\n                            <h3 className=\"h4 mb-2\">24/7 Support</h3>\r\n                            <p className=\"text-muted mb-0\">Our Developer team is Available  round the clock to clear your Queries.</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-3 col-md-6 text-center\">\r\n                        <div className=\"mt-5\">\r\n                            <i className=\"fas fa-4x fa-heart text-primary mb-4\"></i>\r\n                            <h3 className=\"h4 mb-2\">Made with Love</h3>\r\n                            <p className=\"text-muted mb-0\">Is it really open source if it's not made with love?</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\nexport default React.memo(Service)","import React from 'react'\r\nimport './creator.css'\r\nimport wolf from '../../../../assets/images/wolf.svg'\r\nconst Creator =()=>{\r\n    return(\r\n        <section className=\"bg-primary  page-section\" id=\"creator\">\r\n        <div className=\"container\">\r\n            <img className=\"mb-1 background\" src={wolf} alt=\"\" />\r\n            <div className=\"row justify-content-center\">\r\n           \r\n                <div className=\"col-lg-8 text-center top-content-creator-section\">\r\n                    <h2 className=\"text-white-75 mt-4\">The A-Team of this project</h2>\r\n                    {/* <h6 className=\"text-white mt-0\">by</h6> */}\r\n                    <hr className=\"divider light my-4\" />\r\n                    <h5 className=\"text-white-50 mb-2\">SHIVARAJ SHANKAR</h5>\r\n                    <h5 className=\"text-white-50 mb-4 pb-2\">SVS College of Engineering</h5>\r\n                    <h6 className=\"text-white-50 mb-2\">Get out of the console.log or printf or system.out ... they were just used for Debugging.</h6>\r\n                    <h4 className=\"text-white-50 my-3\">\"Talent is cheap; Dedication is Expensive. It will cost you your life.\" <span>-Irving Stone</span></h4>\r\n                    {/* <a className=\"btn btn-light btn-xl js-scroll-trigger\" href=\"#services\">Get Started!</a> */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </section>\r\n    )\r\n}\r\nexport default React.memo(Creator)","import React from 'react'\r\n\r\nconst Contact =()=>{\r\n    return(\r\n        <section className=\"page-section\" id=\"contact\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-lg-8 text-center\">\r\n                        <h2 className=\"mt-0\">Let's Get In Touch!</h2>\r\n                        <hr className=\"divider my-4\" />\r\n                        <p className=\"text-muted mb-5\">Ready to start your next project with us? Give us a call or send us an email and we will get back to you as soon as possible!</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-4 ml-auto text-center mb-5 mb-lg-0\">\r\n                        <i className=\"fas fa-phone fa-3x mb-3 text-muted\"></i>\r\n                        <div>+91 8122 22 8731</div>\r\n                    </div>\r\n                    <div className=\"col-lg-4 mr-auto text-center\">\r\n                        <i className=\"fas fa-envelope fa-3x mb-3 text-muted\"></i>\r\n                        <a className=\"d-block\" href=\"mailto:atomifystudios@gmail.com\">atomifystudios@gmail.com</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\nexport default React.memo(Contact);","import React from 'react'\r\n\r\nconst Footer =()=>{\r\n    return(\r\n        <footer className=\"bg-light py-5\">\r\n            <div className=\"container\">\r\n                <div className=\"small text-center text-muted\">Copyright © Then, Now & Forever - Atomify Studios</div>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\nexport default React.memo(Footer)","import React from 'react'\r\nimport './styles.css'\r\n\r\nimport Navbar from './sections/navbar/navbarLanding'\r\nimport MastHeader from './sections/masterHeader/mastheader'\r\nimport About from './sections/aboutSection/about'\r\nimport Service from './sections/servicess/service'\r\nimport Creator from './sections/creator/creator'\r\nimport Contact from './sections/contact/contact'\r\nimport Footer from './sections/footer/footer'\r\n\r\n\r\nconst LandingPage=()=>{\r\n return(\r\n    <div id=\"page-top\">\r\n        <Navbar/>\r\n        <MastHeader/>\r\n        <About/>\r\n        <Service/>\r\n        <Creator/>\r\n        <Contact/>\r\n        <Footer/>\r\n    </div>\r\n )   \r\n}\r\n\r\nexport default React.memo(LandingPage)","import React from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Navbar=()=>{\r\n    let history = useHistory();\r\n    const redirect=(path)=>{\r\n        history.push(path)\r\n    }\r\n    return(\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-primary-custom fixed-top py-3\" id=\"mainNav\">\r\n            <div className=\"container\">\r\n                <a className=\"navbar-brand  text-primary\" href=\"#page-top\">Quizzler</a>\r\n                <button className=\"navbar-toggler navbar-toggler-right text-primary\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><span className=\"navbar-toggler-icon\"></span></button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n                    <ul className=\"navbar-nav ml-auto my-2 my-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a\r\n                                className=\"nav-link text-dark\" \r\n                                onClick={()=>{\r\n                                    redirect(\"/\")\r\n                                }}\r\n                            >Home</a></li>\r\n                        {/* <li className=\"nav-item\"><a className=\"nav-link text-dark\" href=\"#services\"></a></li> */}\r\n                        <li className=\"nav-item\">\r\n                            <a\r\n                                className=\"nav-link text-dark\"\r\n                                onClick={()=>{\r\n                                    redirect(\"/#contact\")\r\n                                }}\r\n                            >Contact</a></li>\r\n                        <li  className=\"nav-item\">\r\n                            <a \r\n                                className=\"nav-link text-success\"\r\n                                onClick={()=>{\r\n                                    redirect(\"/login\")\r\n                                }}\r\n                            >Login</a></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default React.memo(Navbar);","import React,{useState} from 'react'\r\nimport GoogleLogin from 'react-google-login'\r\nimport logo from '../../assets/images/quizzler logo.png'\r\nimport Navbar from './navbar/navbarLanding'\r\nimport axios from 'axios'\r\nimport * as QueryString from \"query-string\"\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n\r\n\r\n\r\nconst SignupUser=()=>{\r\n    const [email,setEmail]=useState(\"\")\r\n    const [fname, setFname] = useState(\"\")\r\n    const [lname, setLname] = useState(\"\")\r\n    const [password,setPassword]=useState(\"\")\r\n    const [passwordTest, setpasswordTest] = useState(null)\r\n\r\n    const [popupContent,setPopupContent]=useState(\"\")\r\n\r\n    // states and function for the modal\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n\r\n    const passwordTestfunc=(data)=>{\r\n        if(!data.match(/[a-z]/g)){\r\n            setpasswordTest(false)\r\n          document.getElementById(\"password-validation-text\").innerHTML = \"you must use a small letter\"; \r\n        //   console.log(\"has no small letters\");\r\n        }else if(!data.match(/[A-Z]/g)){\r\n            setpasswordTest(false)\r\n          document.getElementById(\"password-validation-text\").innerHTML = \"you must use a capital letter\"; \r\n        //   console.log(\"has no cap letters\")\r\n        } else if(!data.match(/[0-9]/g)){\r\n            setpasswordTest(false)\r\n          document.getElementById(\"password-validation-text\").innerHTML = \"you must use a number\"; \r\n        //   console.log(\"has no a number\")\r\n        }else if(!(data.length >= 8)){\r\n            setpasswordTest(false)\r\n          document.getElementById(\"password-validation-text\").innerHTML = \"minimum password lenght must be 8\"; \r\n        //   console.log(\"has no 8 digits\")\r\n        }else{\r\n            setpasswordTest(true)\r\n        //   console.log(\"good password\")\r\n          document.getElementById(\"password-validation-text\").innerHTML = \"\"; \r\n        }\r\n      }\r\n    \r\n//submit handler for the google auth\r\n    const responseGoogle = (response) => {\r\n        if(response.error){\r\n            console.log(\"error\")\r\n        }else{\r\n            console.log(response.profileObj.email);\r\n            console.log(response.profileObj.name);\r\n            //send these data to the server..\r\n             // axios \r\n             let formData = {Email: response.profileObj.email,Name:response.profileObj.name};    \r\n             // console.log(QueryString.stringify(formData));  \r\n             //header configuration for the CORS\r\n             const config  = {\r\n                     headers: {\r\n                         'Content-Type': 'application/x-www-form-urlencoded',\r\n                         'Access-Control-Allow-Origin':'*'\r\n                     }}\r\n                     axios.post('https://quizzlerserver.herokuapp.com/signupGoogleUser', \r\n                     QueryString.stringify(formData),config)\r\n                     .then(function (response) {\r\n                        //  console.log(response.data);\r\n                         setPopupContent(response.data);\r\n                         handleShow();\r\n                        \r\n                     })\r\n                     .catch(function (error) {\r\n                        setPopupContent(\"Oh snap! Something went wrong, try again.\");\r\n                        handleShow();\r\n                        //  console.log(error);\r\n                     });\r\n        }\r\n       \r\n      }\r\n\r\n//submit handler for the website signup\r\n      const submitHandlerSignup=(event)=>{\r\n        event.preventDefault();\r\n        console.log(\"submit pressed\")\r\n        if(passwordTest===true){\r\n            console.log(\"submit processing\");\r\n            // axios \r\n            let formData = {Email: email,Password: password,Name:fname};    \r\n            // console.log(QueryString.stringify(formData));  \r\n            //header configuration for the CORS\r\n            const config  = {\r\n                    headers: {\r\n                        'Content-Type': 'application/x-www-form-urlencoded',\r\n                        'Access-Control-Allow-Origin':'*'\r\n                    }}\r\n                    axios.post('https://quizzlerserver.herokuapp.com/signupWebsiteUser', \r\n                    QueryString.stringify(formData),config)\r\n                    .then(function (response) {\r\n                        console.log(response.data);\r\n                        setPopupContent(response.data);\r\n                        handleShow();\r\n                        //cleaning up the fields\r\n                        setEmail(\"\")\r\n                        setPassword(\"\")\r\n                        setFname(\"\")\r\n                    })\r\n                    .catch(function (error) {\r\n                        setPopupContent(\"Oh snap! Something went wrong, try again.\");\r\n                        handleShow();\r\n                        //cleaning up the fields\r\n                        setEmail(\"\")\r\n                        setPassword(\"\")\r\n                        setFname(\"\")\r\n                    });\r\n        }else{\r\n            console.log(\"submit not processed\")\r\n        }\r\n    }\r\n\r\n \r\n    return(\r\n        <div>\r\n            <Navbar/>\r\n            <div className=\"text-center  py-4\" id=\"login\">\r\n            <form className=\"form-signin card\" onSubmit={submitHandlerSignup}>\r\n                {/* <img className=\"mb-3 text-center\" src={logo} alt=\"\" width=\"100\" height=\"50\"/> */}\r\n                <h1 className=\"h3 mb-3 font-weight-bold text-primary\">USER SIGNUP</h1>\r\n                <label className=\"sr-only\">Email address</label>\r\n                <input \r\n                    type=\"email\" \r\n                    id=\"inputEmail\" \r\n                    className=\"form-control text-primary\" \r\n                    placeholder=\"Email address\" \r\n                    value={email}\r\n                    required \r\n                    autoFocus\r\n                    onChange={(e)=>{\r\n                        setEmail(e.target.value)\r\n                    }}    \r\n                    />\r\n                <label className=\"sr-only\">User Name</label>\r\n                <input \r\n                    type=\"Text\" \r\n                    id=\"inputName\" \r\n                    className=\"form-control text-primary\" \r\n                    placeholder=\"User Name\" \r\n                    value={fname}\r\n                    required \r\n                    onChange={(e)=>{\r\n                        setFname(e.target.value)\r\n                    }}    \r\n                    />\r\n                <label className=\"sr-only\">Password</label>\r\n                <input \r\n                    type=\"password\" \r\n                    id=\"inputPassword\" \r\n                    className=\"form-control text-primary\" \r\n                    placeholder=\"Password\" \r\n                    value={password}\r\n                    required\r\n                    onChange={(e)=>{\r\n                        setPassword(e.target.value);\r\n                        passwordTestfunc(e.target.value);\r\n                    }}\r\n                    />\r\n                \r\n                <p id=\"password-validation-text\" className=\"text-danger\"></p>\r\n                <button \r\n                    className=\"btn btn-lg btn-primary btn-block\" \r\n                    type=\"submit\"\r\n                    onClick={()=>{\r\n                        \r\n                    }}\r\n                >Sign up</button>\r\n                {/* <div className=\"mt-2\"><a href=\"#\" className=\"text-danger\">forgot password</a></div> */}\r\n                \r\n                <hr/>\r\n                <p className=\"text-secondary\">or</p>\r\n                \r\n                <GoogleLogin\r\n                    clientId=\"987356181579-d89ri7e77o4373stfrjo4ie6o6lqgfpl.apps.googleusercontent.com\"\r\n                    buttonText=\"Signup with Google\"\r\n                    onSuccess={responseGoogle}\r\n                    onFailure={responseGoogle}\r\n                    cookiePolicy={'single_host_origin'}\r\n                />\r\n                              \r\n                <p className=\" mt-4 text-warning\">we will send a verification mail to authenticate that it is you.</p>\r\n            </form>\r\n        </div>\r\n       \r\n        {/* popup  */}\r\n        <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Quizzler</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        {popupContent}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          {/* <Button variant=\"primary\">Understood</Button> */}\r\n        </Modal.Footer>\r\n      </Modal>\r\n        </div>\r\n        \r\n    )\r\n}\r\nexport default React.memo(SignupUser);","import React from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Navbar=()=>{\r\n    let history = useHistory();\r\n    const redirect=(path)=>{\r\n        history.push(path)\r\n    }\r\n    return(\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-primary-custom fixed-top py-3\" id=\"mainNav\">\r\n            <div className=\"container\">\r\n                <a className=\"navbar-brand  text-primary\" href=\"#page-top\">Quizzler</a>\r\n                <button className=\"navbar-toggler navbar-toggler-right text-primary\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><span className=\"navbar-toggler-icon\"></span></button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n                    <ul className=\"navbar-nav ml-auto my-2 my-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a \r\n                                className=\"nav-link text-dark\" \r\n                                onClick={()=>{\r\n                                    redirect(\"/\")\r\n                                }}\r\n                            >Home</a></li>\r\n                        <li className=\"nav-item\">\r\n                            <a \r\n                                className=\"nav-link text-dark\" \r\n                                onClick={()=>{\r\n                                    redirect(\"/#contact\")\r\n                                }}\r\n                            >Contact</a></li>\r\n                        <li  className=\"nav-item\"> \r\n                            <a \r\n                                className=\"nav-link text-success\" \r\n                                onClick={()=>{\r\n                                    redirect(\"/login\")\r\n                                }}\r\n                            >Login</a></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default React.memo(Navbar);","import React,{useState} from 'react'\r\nimport axios from 'axios';\r\nimport * as QueryString from \"query-string\";\r\nimport logo from '../../assets/images/quizzler logo.png'\r\nimport Navbar from './navbar/navbarLanding'\r\n\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst SignupCreator=()=>{\r\n    const [email,setEmail]=useState(\"\")\r\n    const [password,setPassword]=useState(\"\")\r\n    const [name,setName]=useState(\"\")\r\n    const [phoneNumber,setPhoneNumber]=useState(\"\")\r\n    const [passwordTest, setpasswordTest] = useState(null)\r\n\r\n    const [popupContent,setPopupContent]=useState(\"\")\r\n    // states and function for the modal\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);    \r\n    \r\n    const passwordTestfunc=(data)=>{\r\n        if(!data.match(/[a-z]/g)){\r\n            setpasswordTest(false)\r\n          document.getElementById(\"password-validation-text\").innerHTML = \"you must use a small letter\"; \r\n        //   console.log(\"has no small letters\");\r\n        }else if(!data.match(/[A-Z]/g)){\r\n            setpasswordTest(false)\r\n          document.getElementById(\"password-validation-text\").innerHTML = \"you must use a capital letter\"; \r\n        //   console.log(\"has no cap letters\")\r\n        } else if(!data.match(/[0-9]/g)){\r\n            setpasswordTest(false)\r\n          document.getElementById(\"password-validation-text\").innerHTML = \"you must use a number\"; \r\n        //   console.log(\"has no a number\")\r\n        }else if(!(data.length >= 8)){\r\n            setpasswordTest(false)\r\n          document.getElementById(\"password-validation-text\").innerHTML = \"minimum password lenght must be 8\"; \r\n        //   console.log(\"has no 8 digits\")\r\n        }else{\r\n            setpasswordTest(true)\r\n        //   console.log(\"good password\")\r\n          document.getElementById(\"password-validation-text\").innerHTML = \"\"; \r\n        }\r\n      }\r\n\r\n\r\n      //submit handler for the website signup\r\n      const submitHandlerSignup=(event)=>{\r\n        event.preventDefault();\r\n        console.log(\"submit pressed\")\r\n        if(passwordTest===true){\r\n            console.log(\"submit processing\");\r\n            // axios \r\n            let formData = {Email: email,Password: password,Name:name,PhoneNumber:phoneNumber};    \r\n            // console.log(QueryString.stringify(formData));  \r\n            //header configuration for the CORS\r\n            const config  = {\r\n                    headers: {\r\n                        'Content-Type': 'application/x-www-form-urlencoded',\r\n                        'Access-Control-Allow-Origin':'*'\r\n                    }}\r\n                    axios.post('https://quizzlerserver.herokuapp.com/signupWebsiteCreator', \r\n                    QueryString.stringify(formData),config)\r\n                    .then(function (response) {\r\n                        console.log(response.data);\r\n                        setPopupContent(response.data);\r\n                        handleShow();\r\n                        //cleaning up the fields\r\n                        setName(\"\")\r\n                        setPassword(\"\")\r\n                        setPhoneNumber(\"\")\r\n                        setEmail(\"\")\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error);\r\n                        setPopupContent(\"Oh snap! Something went wrong, try again.\");\r\n                        handleShow();\r\n                        //cleaning up the fields\r\n                        setName(\"\")\r\n                        setPassword(\"\")\r\n                        setPhoneNumber(\"\")\r\n                        setEmail(\"\")\r\n                    });\r\n        }else{\r\n            console.log(\"submit not processed\")\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Navbar/>\r\n            <div className=\"text-center\" id=\"login\">\r\n            <form className=\"form-signin card\"  onSubmit={submitHandlerSignup}>\r\n                {/* <img className=\"m-auto\" src={logo} alt=\"\"  height=\"60\"/> */}\r\n                <h1 className=\"h3 my-3 font-weight-bold text-primary\">CREATOR SIGNUP</h1>\r\n                <label className=\"sr-only\">Email address</label>\r\n                <input \r\n                    type=\"email\" \r\n                    id=\"inputEmail\" \r\n                    className=\"form-control text-primary\" \r\n                    placeholder=\"Email address\" \r\n                    value={email}\r\n                    required \r\n                    autoFocus\r\n                    onChange={(e)=>{\r\n                        setEmail(e.target.value)\r\n                    }}    \r\n                    />\r\n                <label  className=\"sr-only\">Name</label>\r\n                <input \r\n                type=\"text\"\r\n                className=\"form-control text-primary\"\r\n                placeholder=\"User Name\"\r\n                value={name}\r\n                required\r\n                onChange={(e)=>{\r\n                    setName(e.target.value)\r\n                }}\r\n                />\r\n                <label className=\"sr-only\">Phone Number</label>\r\n                <input\r\n                    type=\"tel\"\r\n                    className=\"form-control text-primary\"\r\n                    placeholder=\"phone Number\"\r\n                    value={phoneNumber}\r\n                    maxLength=\"10\"\r\n                    required\r\n                    onChange={(e)=>{\r\n                        setPhoneNumber(e.target.value)\r\n                    }}\r\n                />\r\n                <label className=\"sr-only\">Password</label>\r\n                <input \r\n                    type=\"password\" \r\n                    id=\"inputPassword\" \r\n                    className=\"form-control text-primary\" \r\n                    placeholder=\"Password\" \r\n                    value={password}\r\n                    required\r\n                    onChange={(e)=>{\r\n                        setPassword(e.target.value);\r\n                        passwordTestfunc(e.target.value);\r\n                    }}\r\n                    />\r\n                <p id=\"password-validation-text\" className=\"text-danger\"></p>\r\n                <button \r\n                    className=\"btn btn-lg btn-primary btn-block\" \r\n                    type=\"submit\"\r\n                >Sign up</button>\r\n                <hr className=\"mb-1\" />\r\n                <p className=\" mt-2 text-secondary\">A Three step Auth process will be done to confirm that it is you.</p>\r\n            </form>\r\n        </div>\r\n               {/* popup  */}\r\n               <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Quizzler</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            {popupContent}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          {/* <Button variant=\"primary\">Understood</Button> */}\r\n        </Modal.Footer>\r\n      </Modal>\r\n        </div>\r\n    )\r\n}\r\nexport default React.memo(SignupCreator);\r\n\r\n\r\n","import React from 'react'\r\n\r\nconst Navbar=()=>{\r\n    return(\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-primary-custom fixed-top py-3\" id=\"mainNav\">\r\n            <div className=\"container\">\r\n                <a className=\"navbar-brand  text-primary\" href=\"#page-top\">Quizzler</a>\r\n                <button className=\"navbar-toggler navbar-toggler-right text-primary\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><span className=\"navbar-toggler-icon\"></span></button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n                    <ul className=\"navbar-nav ml-auto my-2 my-lg-0\">\r\n                        {/* <li className=\"nav-item\"><a className=\"nav-link text-dark\" href=\"#\"></a></li> */}\r\n                        {/* <li className=\"nav-item\"><a className=\"nav-link text-dark\" href=\"#services\"></a></li> */}\r\n                        {/* <li className=\"nav-item\"><a className=\"nav-link text-dark\" href=\"#\">Contact</a></li> */}\r\n                        <li  className=\"nav-item\"> <a className=\"nav-link text-danger\" href=\"#\">Logout</a></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default React.memo(Navbar);","import React,{useState} from 'react'\r\nimport Navbar from './navbar/navbarLanding'\r\nimport axios from 'axios'\r\nimport * as QueryString from \"query-string\"\r\n\r\nimport './creatorLobby.css'\r\n\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n\r\nconst CreatorLobby=()=>{\r\n\r\n    //states for storage of the create quiz data\r\n    const [createName,setCreateName]=useState(\"\")\r\n    const [createRelatedTo,setCreateRelatedTo]=useState(\"\")\r\n    const [createNoOfQuestions,setCreateNoOfQuestions]=useState(\"\")\r\n    const [createTime,setCreateTime]=useState(\"\")\r\n    const [createPrivate,setCreatePrivate]=useState(false)\r\n    const [createQuestions,setCreateQuestions]=useState(null)\r\n\r\n    //states for storage of the delete quiz data\r\n    const [deleteQuizID, setDeleteQuizID] = useState(\"\")\r\n\r\n    //states for storage of the info global data\r\n    const [infoGlobalQuizID,setInfoGlobalQuiID]= useState(\"\")\r\n\r\n\r\n    // states and function for the create modal-1 show or hide\r\n    const [createQuizPopup, setCreateQuizPopup] = useState(false)\r\n        //state to switch the modal content\r\n    const [createSwitchContent,setCreateSwitchContent]=useState(1)\r\n    const handleCreatePopupShow= () => setCreateQuizPopup(true)\r\n    const handleCreatePopupClose= () =>{\r\n        setCreateQuizPopup(false)\r\n        // resetting all the fields to empty\r\n        setCreateName(\"\")\r\n        setCreateRelatedTo(\"\")\r\n        setCreateNoOfQuestions(\"\")\r\n        setCreatePrivate(false)\r\n        setCreateTime(\"\")\r\n        setCreateQuestions(\"\")\r\n        //setting the modal screen back to the first page\r\n        setCreateSwitchContent(1)\r\n    } \r\n    \r\n    // states and functions for the delete quiz modal show or hide\r\n    const [deleteQuizPopup,setDeleteQuizPopup]=useState(false)\r\n        //states to toggle the modal content\r\n        const handleDeletePopupShow=()=> setDeleteQuizPopup(true)\r\n        const handleDeletePopupClose=()=> setDeleteQuizPopup(false)\r\n\r\n    //states and functions for the info global modal show or hide\r\n    const [infoQuizGlobalPopup,setInfoGlobalPopup]=useState(false)\r\n        //states to toggle the modal content\r\n        const handleInfoGlobalPopupShow=()=>setInfoGlobalPopup(true)\r\n        const handleInfoGlobalPopupClose=()=>setInfoGlobalPopup(false)\r\n\r\n\r\n//states for the result show modal dialogues...\r\n    \r\n    //states and functions for the info modal show or hide\r\n    const [infoQuizPopup,setInfoPopup]=useState(false)\r\n        //states to toggle the modal content\r\n        const handleInfoPopupShow=()=>setInfoPopup(true)\r\n        const handleInfoPopupClose=()=>setInfoPopup(false)\r\n\r\n\r\n\r\n\r\n    //function to validate the first create screen.. to proceed to the second screen\r\n    const validateCreateScreen1=(event)=>{\r\n        event.preventDefault();\r\n        if(createName !==\"\" && createRelatedTo !== \"\" && createNoOfQuestions !== \"\" && createTime !==\"\"){\r\n            // console.log(\"all set to screen-2\")\r\n            let arraydata=[]\r\n            for(let i=0;i<createNoOfQuestions;i++){\r\n                arraydata.push({\r\n                    No:i+1,\r\n                    question:\"\",\r\n                    QImageLink:\"\",\r\n                    option1:\"\",\r\n                    option2:\"\",\r\n                    option3:\"\",\r\n                    option4:\"\",\r\n                    answer:\"\"\r\n                })\r\n            }\r\n            // console.log(arraydata)\r\n            setCreateQuestions([...arraydata])\r\n            setCreateSwitchContent(2)\r\n        }else{\r\n            alert(\"Fill all the Fields First !!\")\r\n        }\r\n    }\r\n\r\n    //function for the create quiz submit\r\n    const submitCreate=()=>{\r\n        // axios \r\n        let formData = {CreatorID:\"warfreak\",QuizName:createName,QuizRelatedTo:createRelatedTo,QuizNOofQuestions:createNoOfQuestions,Time:createTime,Private:createPrivate,Questions:createQuestions};    \r\n        //header configuration for the CORS\r\n        const config  = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin':'*'\r\n                }}\r\n        axios.post('http://localhost:3001/createQuiz', \r\n        formData,config) \r\n        .then(function (response) {\r\n            console.log(response)\r\n            setCreateQuizPopup(false)\r\n            // resetting all the fields to empty\r\n            setCreateName(\"\")\r\n            setCreateRelatedTo(\"\")\r\n            setCreateNoOfQuestions(\"\")\r\n            setCreatePrivate(false)\r\n            setCreateTime(\"\")\r\n            setCreateQuestions(\"\")\r\n            //setting the modal screen back to the first page\r\n            setCreateSwitchContent(1)\r\n            alert(response.data)\r\n        })\r\n        .catch(function (error) {\r\n            alert(\"Check your Network Connection and try agin.\")\r\n        });\r\n    }\r\n\r\n    //function for the delete Quiz submit\r\n    const submitDeleteQuiz=()=>{\r\n        // axios \r\n        let formData = {CreatorID:\"warfreak\",QuizID:deleteQuizID};    \r\n        // console.log(QueryString.stringify(formData));  \r\n        //header configuration for the CORS\r\n        const config  = {\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded',\r\n                    'Access-Control-Allow-Origin':'*'\r\n                }}\r\n        axios.post('http://localhost:3001/deleteQuiz', \r\n        QueryString.stringify(formData),config)\r\n        .then(function (response) {\r\n            alert(response)\r\n        })\r\n        .catch(function (error) {\r\n            alert(\"Check your Network Connection and try agin.\")\r\n        });\r\n    }\r\n\r\n    //function for the info global modal submit\r\n        const submitInfoGlobalQuiz=()=>{\r\n             // axios \r\n            let formData = {QuizID:infoGlobalQuizID,CreatroID:\"warfreak\"};    \r\n            // console.log(QueryString.stringify(formData));  \r\n            //header configuration for the CORS\r\n            const config  = {\r\n                    headers: {\r\n                        'Content-Type': 'application/x-www-form-urlencoded',\r\n                        'Access-Control-Allow-Origin':'*'\r\n                    }}\r\n            axios.post('http://localhost:3001/infoQuiz', \r\n            QueryString.stringify(formData),config)\r\n            .then(function (response) {\r\n                alert(response)\r\n            })\r\n            .catch(function (error) {\r\n                alert(\"Check your Network Connection and try agin.\")\r\n            });\r\n        }\r\n    \r\n    //function for the individual info button submit\r\n    const submitInfoIndividual=(QuizID)=>{\r\n\r\n    }\r\n    //function for the induvidual trash button submit\r\n    const submitDeleteIndividual=(QuiID)=>{\r\n\r\n    }\r\n\r\n    return(\r\n        <div className=\"creatorlobby-bg pb-4\">\r\n            <Navbar/>\r\n            <div className=\"container nav-padding\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-7 card mx-2\">\r\n                        <table className=\"data-table table table-light table-borderless table-striped mt-4\">\r\n                            <tbody>\r\n                                <tr >\r\n                                    <td className=\"text-secondary \">Creator ID</td>\r\n                                    <td className=\"creator-details text-primary\">:  rog281</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"text-secondary\">Name</td>\r\n                                    <td className=\"creator-details text-primary\">: Warfreak</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"text-secondary\">Email</td>\r\n                                    <td className=\"creator-details text-primary\">:  atomifystudios@gmail.com</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div className=\"col-md-4 card bg-light ml-auto mx-2 \">\r\n                        <div className=\"\">\r\n                            <button \r\n                                className=\"btn btn-block btn-success mt-3\"\r\n                                onClick={handleCreatePopupShow}\r\n                            >CREATE QUIZ</button>\r\n                            <button \r\n                                className=\"btn btn-block btn-danger\"\r\n                                onClick={handleDeletePopupShow}    \r\n                            >REMOVE QUIZ</button>\r\n                            <button \r\n                                className=\"btn btn-block btn-info mb-2\"\r\n                                onClick={handleInfoGlobalPopupShow}\r\n                            >GET QUIZ INFO</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <hr className=\"divider primary my-4\"/>\r\n                <h4 className=\"text-center text-dark pb-2\">Hosted Quiz Details</h4>\r\n                <div className=\"card mt-4 py-4 px-4 table-overflow\">\r\n                    <table  className=\"table-bordered table table-hover table-striped table-light \">\r\n                        <tbody className=\"table-overflow\">\r\n                            <tr>\r\n                                <td className=\"text-secondary\">S.No</td>\r\n                                <td className=\"text-secondary\">Quiz ID</td>\r\n                                <td className=\"text-secondary\">Quiz Name</td>\r\n                                <td className=\"text-secondary\">Type</td>\r\n                                <td className=\"text-secondary\">Questions</td>\r\n                                <td className=\"text-secondary text-center\">Details</td>\r\n                                <td  className=\"text-secondary text-center\">Remove</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"text-dark\">1</td>\r\n                                <td className=\"text-primary\">39239</td>\r\n                                <td className=\"text-primary\">kkefbk</td>\r\n                                <td className=\"text-primary\">private</td>\r\n                                <td className=\"text-primary\">20</td>\r\n                                <td><button className=\"btn btn-block btn-info\">INFO</button></td>\r\n                                <td className=\"text-center\"><button className=\"btn btn-block btn-danger\">Trash</button></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <hr className=\"divider primary my-4 \"/>\r\n                <p className=\"text-center text-secondary mt-4\">Best viewed on pc and laptops </p>\r\n            </div>\r\n\r\n\r\n            {/* popup for the create quiz */}\r\n            <Modal\r\n                show={createQuizPopup}\r\n                onHide={handleCreatePopupClose}\r\n                backdrop=\"static\"\r\n                size=\"lg\"\r\n                keyboard={false}\r\n                centered\r\n            >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title><span className=\"text-primary\">Create Quiz</span></Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {/* form to get the initial quiz details */}\r\n                {/* screen-1 */}\r\n                {createSwitchContent===1?\r\n                <div className=\"text-centered m-auto\">\r\n                    <form>\r\n                        <div className=\"row mb-3\">\r\n                            <div className=\"col\">\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control text-primary\" \r\n                                    value={createName}\r\n                                    required\r\n                                    onChange={(e)=>{\r\n                                       setCreateName(e.target.value)\r\n                                    }}\r\n                                    placeholder=\"Quiz Name\"/>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                            <input \r\n                                type=\"text\" \r\n                                className=\"form-control text-primary\" \r\n                                value={createRelatedTo}\r\n                                required\r\n                                onChange={(e)=>{\r\n                                        setCreateRelatedTo(e.target.value)\r\n                                    }}\r\n                                placeholder=\"Related to\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mb-3\">\r\n                            <div className=\"col\">\r\n                                <input \r\n                                    type=\"number\" \r\n                                    className=\"form-control text-primary\" \r\n                                    value={createNoOfQuestions}\r\n                                    required\r\n                                    onChange={(e)=>{\r\n                                        setCreateNoOfQuestions(e.target.value)\r\n                                    }}\r\n                                    placeholder=\"No of Questions\"/>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <input \r\n                                    type=\"number\" \r\n                                    className=\"form-control text-primary\" \r\n                                    value={createTime}\r\n                                    required\r\n                                    onChange={(e)=>{\r\n                                       setCreateTime(e.target.value)\r\n                                    }}\r\n                                    placeholder=\"Time allotted in minutes\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <div className=\"form-check\">\r\n                            <input \r\n                                className=\"form-check-input\" \r\n                                type=\"checkbox\"\r\n                                onChange={(e)=>{\r\n                                    if(createPrivate===false){\r\n                                        // console.log(\"toggling private true\")\r\n                                        setCreatePrivate(true)\r\n                                    }else{\r\n                                        // console.log(\"toggling private false\")\r\n                                        setCreatePrivate(false)\r\n                                    }\r\n                                }}\r\n                                id=\"gridCheck\"/>\r\n                            <label className=\"form-check-label text-secondary\" htmlFor=\"gridCheck\">\r\n                                Make the Quiz private\r\n                            </label>\r\n                            </div>\r\n                        </div>\r\n                        <hr/>\r\n                        <button \r\n                            onClick={validateCreateScreen1}\r\n                            className=\"btn btn-success ml-auto\"\r\n                            >Next</button>\r\n                    </form>\r\n                </div>:null}\r\n                {createSwitchContent===2?\r\n                <div>\r\n                    <form>\r\n                    {createQuestions && createQuestions.map((entry,index)=>{\r\n                    return(\r\n                        <div key={index}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"formGroupExampleInput\" className=\"text-primary\">Question {index+1}</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    value={createQuestions[index].question}\r\n                                    onChange={(e)=>{\r\n                                        let payload=[...createQuestions]\r\n                                        payload[index].question=e.target.value\r\n                                        setCreateQuestions(payload)\r\n                                    }}\r\n                                    className=\"form-control text-dark\" \r\n                                    placeholder=\"Enter the Question here\"/>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input \r\n                                    type=\"text\" \r\n                                    value={createQuestions[index].QImageLink}\r\n                                    onChange={(e)=>{\r\n                                        let payload=[...createQuestions]\r\n                                        // console.log(payload)\r\n                                        payload[index].QImageLink=e.target.value\r\n                                        setCreateQuestions(payload)\r\n                                        // console.log(createQuestions)\r\n                                    }}\r\n                                    className=\"form-control text-info\" \r\n                                    placeholder=\"optional:- link to load the image question\"/>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group col\">\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        value={createQuestions[index].option1}\r\n                                        onChange={(e)=>{\r\n                                            let payload=[...createQuestions]\r\n                                            payload[index].option1=e.target.value\r\n                                            setCreateQuestions(payload)\r\n                                        }}\r\n                                        className=\"form-control text-secondary\" \r\n                                        placeholder=\"option-1 value\"/>\r\n                                </div>\r\n                                <div className=\"form-group col\">\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        value={createQuestions[index].option2}\r\n                                        onChange={(e)=>{\r\n                                            let payload=[...createQuestions]\r\n                                            payload[index].option2=e.target.value\r\n                                            setCreateQuestions(payload)\r\n                                        }}\r\n                                        className=\"form-control text-secondary\" \r\n                                        placeholder=\"option-2 value\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group col\">\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        value={createQuestions[index].option3}\r\n                                        onChange={(e)=>{\r\n                                            let payload=[...createQuestions]\r\n                                            payload[index].option3=e.target.value\r\n                                            setCreateQuestions(payload)\r\n                                        }}\r\n                                        className=\"form-control text-secondary\" \r\n                                        placeholder=\"option-3 value\"/>\r\n                                </div>\r\n                                <div className=\"form-group col\">\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        value={createQuestions[index].option4}\r\n                                        onChange={(e)=>{\r\n                                            let payload=[...createQuestions]\r\n                                            payload[index].option4=e.target.value\r\n                                            setCreateQuestions(payload)\r\n                                        }}\r\n                                        className=\"form-control text-secondary\" \r\n                                        placeholder=\"option-4 value\"/>\r\n                                </div>\r\n                            </div>\r\n                            <select \r\n                                className=\"form-control text-success\" \r\n                                value={createQuestions[index].answer}\r\n                                onChange={(e)=>{\r\n                                    let payload=[...createQuestions]\r\n                                    payload[index].answer=e.target.value\r\n                                    setCreateQuestions(payload)\r\n                                    // console.log(createQuestions);\r\n                                }}\r\n                                >\r\n                                <option>answer</option>\r\n                                <option>1</option>\r\n                                <option>2</option>\r\n                                <option>3</option>\r\n                                <option>4</option>\r\n                            </select>\r\n                            <hr className=\"divider my-4\" />\r\n                        </div>\r\n                    )\r\n                })}\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <button \r\n                                className=\"btn btn-block btn-success\"\r\n                                onClick={(event)=>{\r\n                                    event.preventDefault();\r\n                                    console.log(\"sumbit presed\")\r\n                                    for(var i=1;i<=createQuestions.length;i++){\r\n                                        if(createQuestions[i-1].question !==\"\" && createQuestions[i-1].option1 !==\"\" && createQuestions[i-1].option2 !==\"\" && createQuestions[i-1].option3 !==\"\" && createQuestions[i-1].option4 !==\"\" && createQuestions[i-1].answer !==\"\" && createQuestions[i-1].answer !==\"answer\"){\r\n                                            // submit\r\n                                            submitCreate();\r\n                                            break;\r\n                                        }else{\r\n                                            alert(\"Fill all the fields in the Question \"+ i + \" to Create the quiz\")\r\n                                            break;\r\n                                        }\r\n                                    }\r\n                                }}\r\n                                >Create</button>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <button \r\n                                className=\"btn btn-block btn-danger\"\r\n                                onClick={()=>{\r\n                                    // resetting all the fields to empty\r\n                                    setCreateName(\"\")\r\n                                    setCreateRelatedTo(\"\")\r\n                                    setCreateNoOfQuestions(\"\")\r\n                                    setCreatePrivate(false)\r\n                                    setCreateTime(\"\")\r\n                                    setCreatePrivate(\"\")\r\n                                    //closing the modal\r\n                                    handleCreatePopupClose()\r\n                                    //setting the modal screen back to the first page\r\n                                    setCreateSwitchContent(1)\r\n                                }}\r\n                                >Cancel</button>\r\n                        </div>\r\n                    </div>\r\n                        \r\n                    </form>\r\n                </div>:null}\r\n            </Modal.Body>\r\n        </Modal>\r\n\r\n        {/* modal for the delete quiz */}\r\n        <Modal\r\n            show={deleteQuizPopup}\r\n            onHide={handleDeletePopupClose}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n            centered\r\n        >\r\n            <Modal.Header>\r\n                <Modal.Title><span className=\"text-primary\">Delete Quiz</span></Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <form>\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <label className=\"text-secondary\">Quiz ID</label>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                        <input \r\n                            type=\"text\" \r\n                            value={deleteQuizID}\r\n                            onChange={(e)=>{\r\n                                setDeleteQuizID(e.target.value)\r\n                            }}\r\n                            className=\"form-control text-danger\" \r\n                            placeholder=\"Quiz ID\"/>\r\n                        </div>\r\n                    </div>\r\n                    <hr/>\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                        <button \r\n                            className=\"btn btn-primary btn-block\" \r\n                            onClick={(event)=>{\r\n                            event.preventDefault();\r\n                            if(deleteQuizID ===\"\"){\r\n                                alert(\"enter a quiz Id to drop the Quiz.\")\r\n                            }else{\r\n                                //submit\r\n                                submitDeleteQuiz();\r\n                            }\r\n                            }}>\r\n                            Trash\r\n                        </button>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <button \r\n                                className=\"btn btn-secondary btn-block\" \r\n                                onClick={handleDeletePopupClose}>\r\n                                Close\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>       \r\n            </Modal.Body>\r\n        </Modal>\r\n\r\n        {/* modal for the global info  */}\r\n        <Modal\r\n            show={infoQuizGlobalPopup}\r\n            onHide={handleInfoGlobalPopupClose}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n            centered\r\n            >\r\n            <Modal.Header>\r\n                <Modal.Title><span className=\"text-primary\">Quiz INFO</span></Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Quiz ID</label>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <input \r\n                            type=\"text\" \r\n                            value={infoGlobalQuizID}\r\n                            onChange={(e)=>{\r\n                                setInfoGlobalQuiID(e.target.value)\r\n                            }}\r\n                            className=\"form-control text-primary\" \r\n                            placeholder=\"Quiz ID\"/>\r\n                    </div>\r\n                </div>\r\n                <hr/>\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                        <button \r\n                            className=\"btn btn-primary btn-block\" \r\n                            onClick={(event)=>{\r\n                            event.preventDefault();\r\n                            if(infoGlobalQuizID ===\"\"){\r\n                                alert(\"enter a quiz Id to get the Quiz info.\")\r\n                            }else{\r\n                                //submit\r\n                                submitInfoGlobalQuiz()\r\n                            }\r\n                            }}>\r\n                            Get Info\r\n                        </button>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <button \r\n                                className=\"btn btn-secondary btn-block\" \r\n                                onClick={handleInfoGlobalPopupClose}>\r\n                                Close\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n               \r\n            </Modal.Body>\r\n        </Modal>\r\n\r\n        \r\n\r\n        {/*modal for the outputs of info */}\r\n        {/* <Modal\r\n            show={show}\r\n            onHide={handleClose}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n            centered\r\n            >\r\n            <Modal.Header>\r\n            <Modal.Title><span className=\"text-primary\">INFO</span></Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {popupContent}\r\n            </Modal.Body>\r\n        </Modal> */}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default React.memo(CreatorLobby)\r\n\r\n\r\n//modal for the individual info and trash...\r\n//alse the submit function for the individual info and the trash...\r\n","import React from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Navbar=(props)=>{\r\n    let history = useHistory();\r\n    const redirect=(path)=>{\r\n        history.push(path)\r\n    }\r\n    return(\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-primary-custom fixed-top py-3\" id=\"mainNav\">\r\n            <div className=\"container\">\r\n                <a className=\"navbar-brand  text-primary\" href=\"\">Quizzler</a>\r\n                <button className=\"navbar-toggler navbar-toggler-right text-primary\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><span className=\"navbar-toggler-icon\"></span></button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n                    <ul className=\"navbar-nav ml-auto my-2 my-lg-0\">\r\n                        <li className=\"nav-item text-light\">{props.name}</li>\r\n                        <li className=\"nav-item\">\r\n                            <a \r\n                                className=\"nav-link text-dark\" \r\n                                onClick={()=>{\r\n                                    redirect(\"/\")\r\n                                }}\r\n                            >Home</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a \r\n                                className=\"nav-link text-dark\" \r\n                                onClick={()=>{\r\n                                    redirect(\"/#contact\")\r\n                                }}\r\n                            >Contact</a>\r\n                        </li>\r\n                        <li  className=\"nav-item\">\r\n                            <a className=\"nav-link text-danger\" \r\n                                onClick={()=>{\r\n                                    redirect(\"/\")\r\n                                }}\r\n                            >Logout</a>\r\n                        </li>\r\n                        \r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default React.memo(Navbar);","import React,{useState,useEffect} from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport Navbar from './navbar/navbarLanding'\r\nimport axios from 'axios'\r\nimport './userLobby.css'\r\n\r\nconst UserLobby=()=>{\r\n    let {uid,uname}=useParams()\r\n    //state for the storage of the quiz collection\r\n    const [quizData,setQuizData]=useState(null);\r\n    //state for the storage of the \r\n    const [quizID,setQuizID]=useState(\"\");\r\n\r\n    //for the redirects- react-router-dom\r\n    let history = useHistory();\r\n    const redirect=(path)=>{\r\n        history.push(path)\r\n    }\r\n    //submit handler for the quiz id\r\n    const SubmitQuizID=()=>{\r\n         // axios \r\n         let formData = {ID:quizID};    \r\n         //header configuration for the CORS\r\n         const config  = {\r\n                 headers: {\r\n                     'Content-Type': 'application/json',\r\n                     'Access-Control-Allow-Origin':'*'\r\n                 }}\r\n        axios.post('https://quizzlerserver.herokuapp.com/privateQuizID',formData,config) \r\n        .then(function (response) {\r\n            // console.log(response.data)\r\n            let arrayModifier=[]\r\n            arrayModifier.push(response.data)\r\n            setQuizData(arrayModifier)\r\n            setQuizID(\"\")\r\n        })\r\n        .catch(function (error) {\r\n            alert(\"Check your Network Connection and try agin.\")\r\n        });\r\n    }\r\n\r\n    //submit handler for the public quizzes\r\n    const SubmitPublicQuizID=()=>{\r\n        // axios \r\n        axios.get('https://quizzlerserver.herokuapp.com/publicQuizData')\r\n          .then(function (response) {\r\n            setQuizData(response.data)\r\n            console.log(response.data)\r\n          })\r\n          .catch(function (error) {\r\n            alert(\"Check your Network Connection and try agin.\")\r\n          })\r\n   }\r\n\r\n    return(\r\n        <div>\r\n        <div className=\"user-background\"></div>\r\n        <div className=\"container\">\r\n        \r\n            <Navbar name={uname}/>\r\n            <div className=\"row nav-padding\">\r\n\r\n                <div className=\"col-lg-4\">\r\n                    <div className=\"m-4\">\r\n                        <form className=\"card p-4 custom-findQuiz-bg\">\r\n                            <label className=\"text-secondary\">Already received a Quiz ID!<br/> Enter it here.</label>\r\n                            <input \r\n                                type=\"text\" \r\n                                id=\"inputQuizID\" \r\n                                className=\"form-control text-primary\" \r\n                                placeholder=\"Quiz ID\" \r\n                                value={quizID}\r\n                                required \r\n                                onChange={(e)=>{\r\n                                    setQuizID(e.target.value);\r\n                                }}    \r\n                            />\r\n                            <button \r\n                                className=\"btn btn-lg btn-primary btn-block mt-3\" \r\n                                onClick={(e)=>{\r\n                                    e.preventDefault()\r\n                                    if(quizID===\"\"){\r\n                                        alert(\"enter the ID to check\")\r\n                                    }else{\r\n                                        SubmitQuizID()\r\n                                    }\r\n                                }}\r\n                            >Find</button>\r\n                        </form>\r\n                        <p className=\"text-center my-4 text-muted\">or</p>\r\n                        <div className=\"card p-4 custom-background-1\">\r\n                        <h6 className=\"text-center text-muted\">Attend from our wide range of public Quizzes.</h6>\r\n                        <button \r\n                            className=\"btn btn-lg btn-outline-primary btn-block mt-3\" \r\n                            onClick={(e)=>{\r\n                                    e.preventDefault()                                  \r\n                                    SubmitPublicQuizID()\r\n                                    // console.log(\"params value \"+uid+\" \"+uname)\r\n                                }}\r\n                            >Search Public Quizzes</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-lg-8\">\r\n                    \r\n                    {quizData && quizData.map((entry,index)=>{\r\n                        return(\r\n                            <div className=\"card py-2 px-4 my-4 custom-background-2\" key={entry._id}>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-8 pt-4\">\r\n                                        <h5 className=\"text-secondary\">Quiz name: {entry.name}</h5>\r\n                                        <h6 className=\"text-secondary\">Realted to: {entry.relatedTo}</h6>\r\n                                        <p className=\"text-primary\">Created by: {entry.hostedBy}</p>\r\n                                    </div>\r\n                                    <div className=\"col-md-4\">\r\n                                    <button \r\n                                        className=\"btn btn-block btn-success mt-4\"\r\n                                        value={entry._id}\r\n                                        onClick={(e)=>{\r\n                                            //function to trigger to the next page with the corresponding ID\r\n                                            redirect(\"/q/\"+e.target.value+\"/\"+uid+\"/\"+uname)\r\n                                        }}\r\n                                    >START</button>\r\n                                    {/* <p className=\"text-danger text-center\">Already taken.</p> */}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n\r\n                </div>            \r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\nexport default React.memo(UserLobby)","import React from 'react'\r\n\r\nclass Clock extends React.Component {\r\n    format(time) {\r\n      let seconds = time % 60;\r\n      let minutes = Math.floor(time / 60);\r\n      minutes = minutes.toString().length === 1 ? \"0\" + minutes : minutes;\r\n      seconds = seconds.toString().length === 1 ? \"0\" + seconds : seconds;\r\n      return minutes + ':' + seconds;\r\n    }\r\n    render () {\r\n      const {time} = this.props;\r\n      return (\r\n        <div className=\"displayedTime\">\r\n          <h5>{this.format(time)}</h5>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\nexport default React.memo(Clock)","import React, {useCallback,useState,useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport * as QueryString from \"query-string\"\r\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\"\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport {useParams} from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Clock from './component/clock/clock'\r\nimport './quizzler.css'\r\n\r\nconst Quizzler=()=>{\r\n    let history = useHistory();\r\n    const redirect=(path)=>{\r\n        history.push(path)\r\n    }\r\n    \r\n    let {quizID,uid,uname}=useParams()\r\n    //states to hold the data\r\n    const [quizData,setQuizData]=useState(null)\r\n    //state for the answers from the server\r\n    const [answers,setAnswers]=useState(null)\r\n    //state to hold the answers done by user\r\n    const [ansDone,setAnsDone]=useState(null)\r\n    //state to hold the clock time\r\n    const [timer,setTimer] = useState(null)\r\n    const [timerActive,setTimerActive] = useState(false)  \r\n    //state to hold the full  screen state  \r\n    const [fullscreen,setFullscreen]=useState(false)\r\n\r\n    //state for the modal instructions\r\n    const [modalInstructions,setModalInstructions]=useState(true)\r\n    const handleClose = () => setModalInstructions(false);\r\n    const handleShow = () => setModalInstructions(true);\r\n\r\n    //state for the modal instructions\r\n    const  [message,setMessage] = useState(null)\r\n    const [modalMessage,setModalMessage]=useState(false)\r\n    const handleCloseMessage = () => setModalMessage(false);\r\n    const handleShowMessage = () => setModalMessage(true);\r\n    \r\n\r\n    // variable holding the full screen trigger\r\n    const screen1 = useFullScreenHandle();\r\n\r\n    // callback function from the react-fullscreen package\r\n    const reportChange = useCallback((state, handle) => {\r\n        if (handle === screen1) {\r\n          console.log('Screen 1 went to', state)\r\n          //handle is a function holding the active state , enter & exit function\r\n          console.log(\"handle \",handle)\r\n          //set the if condition here for the violation handle2\r\n          if(fullscreen ===true &&state===false){\r\n            //fullscreen is our handle... set at start and the end\r\n            //state is the current state held by the full screen component\r\n            console.log(\"violation due to exit full screen before the quiz ends\")\r\n            //submit for violation\r\n            violationSubmit()\r\n          }\r\n        }\r\n      }, [screen1]);\r\n\r\n    const fullscreenFunc=(value)=>{\r\n        if(value===\"enter\"){\r\n          //fullscreen flag is set to true\r\n          setFullscreen(true)\r\n          screen1.enter() \r\n        }\r\n        if(value===\"exit\"){\r\n          //fullscreen flag is set to false\r\n          setFullscreen(false)\r\n          screen1.exit()\r\n        }\r\n    }\r\n\r\n    //function for the timer countdown\r\n    useEffect(()=>{\r\n        if(timerActive){\r\n            timer > 0 && setTimeout(() => setTimer(timer - 1), 1000);\r\n            if(timer===0){\r\n                timeoutTrigger()\r\n            }\r\n        }  \r\n      },[timer,timerActive])\r\n    //function for the timeout trigger\r\n    const timeoutTrigger=()=>{\r\n        setTimerActive(false)\r\n        // alert(\"timeout... saving progress\")\r\n        submitTimeout()\r\n    }\r\n\r\n    //function to fetch the quiz data on startup\r\n    useEffect(()=>{\r\n        // axios \r\n        let formData = {ID:quizID};    \r\n        // console.log(quizID);\r\n        //header configuration for the CORS\r\n        const config  = {\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded',\r\n                    'Access-Control-Allow-Origin':'*'\r\n                }}\r\n        axios.post('https://quizzlerserver.herokuapp.com/fetchQuiz', \r\n        QueryString.stringify(formData),config)\r\n        .then(function (response) {\r\n            // console.log(response.data);\r\n            if(response.data !==\"Error\"){\r\n                setQuizData(response.data)\r\n                // console.log(response.data)\r\n                // console.log(response.data.time)\r\n                setTimer(response.data.time *60)\r\n\r\n                let ansScrapper=[]\r\n                let dummyfill=[]\r\n                for(var i=0;i<response.data.questions.length;i++){\r\n                    ansScrapper.push(response.data.questions[i].answer);\r\n                    // console.log(ansScrapper);\r\n                    dummyfill.push(-1)\r\n                }\r\n                setAnsDone(dummyfill)\r\n                setAnswers(ansScrapper)\r\n            }else{\r\n                alert(\"Cannot fetch the data from the Server... Error!! Refresh again.\")\r\n            }\r\n        })\r\n        .catch(function (error) {\r\n            alert(\"Error!! Check your Network and Try again.\")\r\n        });\r\n\r\n        //axios post to initially set the quiztaken to opened\r\n         // axios \r\n         let formDatas = {QID:quizID,UID:uid,UName:uname,Status:\"opened\",Score:0};    \r\n         // console.log(QueryString.stringify(formData));  \r\n                 axios.post('https://quizzlerserver.herokuapp.com/submitInitial', \r\n                 QueryString.stringify(formDatas),config)\r\n                 .then(function (response) {\r\n                    if(response.data===\"Error\"){\r\n                        alert(\"something went wrong. Try agin.. If you cant take the quiz again, contact the creator or our Dev team\")\r\n                    }\r\n                    else{\r\n                        if(response.data===\"Already Taken!\"){\r\n                            setMessage(response.data)\r\n                            handleShowMessage()\r\n                        }\r\n                    }                        \r\n                 })\r\n                 .catch(function (error) {\r\n                     alert(\"Connection lost.. Refresh\")\r\n                 });\r\n    },[])\r\n\r\n    //function to validate the quiz--normal submit\r\n    const submitQuizDataHandler=(event)=>{\r\n        event.preventDefault();\r\n        let flagSubmit=0;\r\n        for(var i=0;i<ansDone.length;i++){\r\n            if(ansDone[i]===-1){\r\n                alert(\"You forgot to Answer Question No:\"+(i+1)+\". Please Answer all the questions to proceed\");\r\n                flagSubmit=1;\r\n                break;\r\n            }\r\n        }\r\n        if(flagSubmit===0){\r\n            fullscreenFunc(\"exit\")\r\n            let scoreObtained=0;\r\n            for(var i=0;i<ansDone.length;i++){\r\n                if(ansDone[i]===answers[i]){\r\n                    scoreObtained=scoreObtained+1\r\n                }\r\n            }\r\n            // alert(\"submitting\");\r\n            // fullscreenFunc(\"exit\")\r\n            //check for the fullscreen is still turned on...\r\n            // forward to respective submit handlers\r\n            \r\n            //create the axios here\r\n             // axios \r\n             let formData = {QID:quizID,UID:uid,UName:uname,Status:\"completed\",Score:scoreObtained};    \r\n             // console.log(QueryString.stringify(formData));  \r\n             //header configuration for the CORS\r\n            const config  = {\r\n                headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                'Access-Control-Allow-Origin':'*'\r\n            }}\r\n            axios.post('https://quizzlerserver.herokuapp.com/submitUpdate', \r\n            QueryString.stringify(formData),config)\r\n            .then(function (response) {\r\n               //create a modal to show the message from server\r\n                setMessage(response.data)\r\n                handleShowMessage()\r\n            })\r\n            .catch(function (error) {\r\n                alert(\"You have violated the terms. refresh to continue\")\r\n            });\r\n            }\r\n    }\r\n\r\n    //function violation submit\r\n    const violationSubmit=()=>{\r\n        //submit data on terms of the violation\r\n         // axios \r\n         let formData = {QID:quizID,UID:uid,UName:uname,Status:\"violation\",Score:0};    \r\n         // console.log(QueryString.stringify(formData));  \r\n         //header configuration for the CORS\r\n        const config  = {\r\n            headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n            'Access-Control-Allow-Origin':'*'\r\n        }}\r\n        axios.post('https://quizzlerserver.herokuapp.com/submitUpdate', \r\n        QueryString.stringify(formData),config)\r\n        .then(function (response) {\r\n           //display the violation message and move to dashboard\r\n           //create a modal to show the violation message\r\n           setMessage(response.data)\r\n           handleShowMessage()\r\n        })\r\n        .catch(function (error) {\r\n            alert(\"You have violated the terms. refresh to continue\")\r\n        });\r\n    }\r\n    //function for the clock timeout submit\r\n    const submitTimeout = ()=>{\r\n        \r\n        let scoreObtained=0\r\n        for(var i=0;i<ansDone.length;i++){\r\n            if(ansDone[i]===answers[i]){\r\n                scoreObtained=scoreObtained+1\r\n            }\r\n        }\r\n        // axios \r\n        let formData = {QID:quizID,UID:uid,UName:uname,Status:\"completed\",Score:scoreObtained};    \r\n        // console.log(QueryString.stringify(formData));  \r\n        //header configuration for the CORS\r\n        const config  = {\r\n            headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n            'Access-Control-Allow-Origin':'*'\r\n        }}\r\n        axios.post('https://quizzlerserver.herokuapp.com/submitUpdate', \r\n        QueryString.stringify(formData),config)\r\n        .then(function (response) {\r\n           //create a modal to show the message from server\r\n            setMessage(response.data)\r\n            handleShowMessage()\r\n        })\r\n        .catch(function (error) {\r\n            alert(\"You have violated the terms. refresh to continue\")\r\n        });\r\n        fullscreenFunc(\"exit\")\r\n    }\r\n\r\n    return(\r\n        <FullScreen handle={screen1} onChange={reportChange}>\r\n        \r\n      \r\n        <div className=\"fullscreen-overflow-scroll\">\r\n            <div className=\"quizzler-background-quiztime\"></div>\r\n\r\n            {/* timer component */}\r\n            <div className=\"card timer-custom px-2 pt-2\">\r\n                <p className=\"text-secondary m-0\">Time left:</p>\r\n                <span className=\"text-center\">\r\n                    <Clock time={timer}/>\r\n                </span>                                                                    \r\n            </div>\r\n            {/* maximise to full screen .. */}\r\n            {/* populate all the quiz data here using the useEffect */}\r\n            \r\n            <div className=\"container p-4 \">\r\n                {/* quiz details card */}\r\n                <div className=\"card p-4 my-4 question-component text-center border-warning\">\r\n                    <h5 className=\"text-primary\">{quizData?quizData.name:null}</h5>\r\n                    <p className=\"text-secondary\">{quizData?quizData.relatedTo:null}</p>                    \r\n                </div>\r\n\r\n                <form>                \r\n                {quizData && quizData.questions.map((entry,index)=>{\r\n                    return(\r\n                        <div className=\"card p-4  my-4 question-component\" key={entry.No}>                            \r\n                                <h5 className=\"text-secondary\">{index+1+\") \"}{entry.question}</h5>\r\n                                <div className=\"text-center my-3\">\r\n                                    {entry.QImageLink!==\"\"?<img className=\"question-compoment-image center\" src={entry.QImageLink} alt=\"question reference image\"/>:null}                                    \r\n                                </div>\r\n\r\n                                <div \r\n                                    onChange={(e)=>{\r\n                                        var tempAns=ansDone\r\n                                        tempAns[index]=e.target.value\r\n                                        setAnsDone(tempAns)\r\n                                        console.log(ansDone)\r\n                                    }} \r\n                                    className=\"p-2\">\r\n                                    <div className=\"form-check my-2\">\r\n                                        <input className=\"form-check-input\" name={\"question\"+index} type=\"radio\" id={\"q\"+index+\"-o1\"} value=\"1\"/>\r\n                                        <label className=\"form-check-label h5\" htmlFor={\"q\"+index+\"-o1\"}>\r\n                                            {entry.option1}\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"form-check my-2\">\r\n                                        <input className=\"form-check-input\" name={\"question\"+index} type=\"radio\" id={\"q\"+index+\"-o2\"} value=\"2\" />\r\n                                        <label className=\"form-check-label h5\" htmlFor={\"q\"+index+\"-o2\"}>\r\n                                        {entry.option2}\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"form-check my-2\">\r\n                                        <input className=\"form-check-input\" name={\"question\"+index} type=\"radio\" id={\"q\"+index+\"-o3\"} value=\"3\" />\r\n                                        <label className=\"form-check-label h5\" htmlFor={\"q\"+index+\"-o3\"}>\r\n                                        {entry.option3}\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"form-check my-2\">\r\n                                        <input className=\"form-check-input\" name={\"question\"+index} type=\"radio\" id={\"q\"+index+\"-o4\"} value=\"4\" />\r\n                                        <label className=\"form-check-label h5\" htmlFor={\"q\"+index+\"-o4\"}>\r\n                                        {entry.option4}\r\n                                        </label>\r\n                                    </div>\r\n                                </div>               \r\n                        </div>\r\n                    )\r\n                })}\r\n                <div className=\"card question-component\">\r\n                    <button \r\n                        className=\"btn btn-block btn-primary\"\r\n                        onClick={(e)=>{\r\n                            submitQuizDataHandler(e)\r\n                        }}\r\n                        >SUBMIT</button>\r\n                </div>\r\n                </form>\r\n            </div>\r\n\r\n\r\n\r\n\r\n        {/* modal for the instructions */}\r\n            <Modal\r\n            show={modalInstructions}\r\n            onHide={handleClose}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n            centered\r\n            >\r\n            <Modal.Body>\r\n                <h4 className=\"text-danger my-4 text-center\">Read the Conditions Carefully</h4>\r\n                <hr/>\r\n                <ul>\r\n                  <li className=\"text-secondary my-2\">Make sure you have a proper internet connection.</li>\r\n                  <li className=\"text-secondary my-2\">We won't monitor you, We have asked the help of your device to do the heavy lifing for us.</li>\r\n                  <li className=\"text-secondary my-2\">Dont answer any Calls while taking the quiz.</li>\r\n                  <li className=\"text-secondary my-2\">Dont try to switch between Applications while taking the quiz.</li>\r\n                  <li className=\"text-secondary my-2\">Taking part in any malpractice will lead to disqualification.</li>\r\n                  <li className=\"text-secondary my-2\">You can take a Quiz only once. So use it wisely.</li>\r\n                  <li className=\"text-secondary my-2\">You have already entered the Quiz, even if you quit from here It is considered as attended.</li>\r\n                </ul>\r\n                <button \r\n                    className=\"btn btn-block btn-primary\" \r\n                    type=\"button\"\r\n                    onClick={()=>{\r\n                        handleClose()\r\n                        setTimerActive(true)\r\n                        fullscreenFunc(\"enter\")\r\n                    }}\r\n                    >AGREE</button>\r\n            </Modal.Body>\r\n        </Modal>\r\n\r\n        {/* modal for the message display messages */}\r\n        <Modal\r\n            show={modalMessage}\r\n            onHide={handleCloseMessage}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n            centered\r\n            >\r\n            <Modal.Header>\r\n            <Modal.Title>Quizzler</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {message}\r\n                <hr/>\r\n                <button \r\n                    className=\"btn btn-block btn-primary\"\r\n                    onClick={()=>{\r\n                        redirect(\"/ul/\"+uid+\"/\"+uname);\r\n                    }}\r\n                    >Go to Dashboard</button>\r\n            </Modal.Body>\r\n        </Modal>\r\n        </div>\r\n        </FullScreen>\r\n    )\r\n}\r\n\r\nexport default React.memo(Quizzler)","import React from 'react';\nimport {\n  HashRouter,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport LandingPage from './layouts/landingPage/landingPage'\nimport Login from './layouts/login/login'\nimport SignupUser from './layouts/signupUser/signupUser'\nimport SignupCreator from './layouts/signupCreator/signupCreator'\n\nimport CreatorLobby from './layouts/creatorLobby/creatorLobby'\nimport UserLobby from './layouts/userLobby/UserLobby'\n\nimport Quizzler from './layouts/Quizzler/Quizzler'\nimport './App.css';\n\nfunction App() {\n  return (\n    <HashRouter>\n    <Switch>\n      <Route exact path=\"/\">\n        <LandingPage/>\n      </Route>\n      <Route path=\"/login\">\n        <Login/>\n      </Route>\n      <Route path=\"/user-signup\">\n        <SignupUser/>\n      </Route>\n      <Route path=\"/creator-signup\">\n        <SignupCreator/>\n      </Route>\n      <Route path=\"/cl/:cid/:cname\">\n      {/* <Route exact path=\"/creator-dashboard/:creatorID\"> */}\n        <CreatorLobby/> \n      </Route>\n      <Route path=\"/ul/:uid/:uname\">\n        <UserLobby/>\n      </Route>\n      <Route path=\"/q/:quizID/:uid/:uname\">\n        <Quizzler/>\n      </Route>\n    </Switch>\n    </HashRouter>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}