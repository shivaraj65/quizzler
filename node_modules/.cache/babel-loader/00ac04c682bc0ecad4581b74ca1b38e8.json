{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SHIVARAJ\\\\Desktop\\\\quizzlerGlobal\\\\quizzler\\\\src\\\\layouts\\\\Quizzler\\\\Quizzler.js\";\nimport React, { useCallback, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport * as QueryString from \"query-string\";\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\";\nimport Modal from 'react-bootstrap/Modal';\nimport { useParams } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport Clock from './component/clock/clock';\nimport './quizzler.css';\n\nconst Quizzler = () => {\n  let history = useHistory();\n\n  const redirect = path => {\n    history.push(path);\n  };\n\n  let {\n    quizID,\n    uid,\n    uname\n  } = useParams(); //states to hold the data\n\n  const [quizData, setQuizData] = useState(null); //state for the answers from the server\n\n  const [answers, setAnswers] = useState(null); //state to hold the answers done by user\n\n  const [ansDone, setAnsDone] = useState(null); //state to hold the clock time\n\n  const [timer, setTimer] = useState(null);\n  const [timerActive, setTimerActive] = useState(false); //state to hold the full  screen state  \n\n  const [fullscreen, setFullscreen] = useState(false); //state for the modal instructions\n\n  const [modalInstructions, setModalInstructions] = useState(true);\n\n  const handleClose = () => setModalInstructions(false);\n\n  const handleShow = () => setModalInstructions(true); //state for the modal instructions\n\n\n  const [message, setMessage] = useState(null);\n  const [modalMessage, setModalMessage] = useState(false);\n\n  const handleCloseMessage = () => setModalInstructions(false);\n\n  const handleShowMessage = () => setModalInstructions(true); // variable holding the full screen trigger\n\n\n  const screen1 = useFullScreenHandle(); // callback function from the react-fullscreen package\n\n  const reportChange = useCallback((state, handle) => {\n    if (handle === screen1) {\n      console.log('Screen 1 went to', state); //handle is a function holding the active state , enter & exit function\n\n      console.log(\"handle \", handle); //set the if condition here for the violation handle2\n\n      if (fullscreen === true && state === false) {\n        //fullscreen is our handle... set at start and the end\n        //state is the current state held by the full screen component\n        console.log(\"violation due to exit full screen before the quiz ends\"); //submit for violation\n\n        violationSubmit();\n      }\n    }\n  }, [screen1]);\n\n  const fullscreenFunc = value => {\n    if (value === \"enter\") {\n      //fullscreen flag is set to true\n      setFullscreen(true);\n      screen1.enter();\n    }\n\n    if (value === \"exit\") {\n      //fullscreen flag is set to false\n      setFullscreen(false);\n      screen1.exit();\n    }\n  }; //function for the timer countdown\n\n\n  useEffect(() => {\n    if (timerActive) {\n      timer > 0 && setTimeout(() => setTimer(timer - 1), 1000);\n\n      if (timer === 0) {\n        timeoutTrigger();\n      }\n    }\n  }, [timer, timerActive]); //function for the timeout trigger\n\n  const timeoutTrigger = () => {\n    setTimerActive(false);\n    alert(\"timeout... saving progress\");\n  }; //function to fetch the quiz data on startup\n\n\n  useEffect(() => {\n    // axios \n    let formData = {\n      ID: quizID\n    }; // console.log(quizID);\n    //header configuration for the CORS\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Access-Control-Allow-Origin': '*'\n      }\n    };\n    axios.post('http://localhost:3001/fetchQuiz', QueryString.stringify(formData), config).then(function (response) {\n      // console.log(response.data);\n      if (response.data !== \"Error\") {\n        setQuizData(response.data); // console.log(response.data)\n        // console.log(response.data.time)\n\n        setTimer(response.data.time * 60);\n        let ansScrapper = [];\n        let dummyfill = [];\n\n        for (var i = 0; i < response.data.questions.length; i++) {\n          ansScrapper.push(response.data.questions[i].answer); // console.log(ansScrapper);\n\n          dummyfill.push(-1);\n        }\n\n        setAnsDone(dummyfill);\n        setAnswers(ansScrapper);\n      } else {\n        alert(\"Cannot fetch the data from the Server... Error!! Refresh again.\");\n      }\n    }).catch(function (error) {\n      alert(\"Error!! Check your Network and Try again.\");\n    }); //axios post to initially set the quiztaken to opened\n    // axios \n\n    let formDatas = {\n      QID: quizID,\n      UID: uid,\n      UName: uname,\n      Status: \"opened\",\n      Score: 0\n    }; // console.log(QueryString.stringify(formData));  \n\n    axios.post('http://localhost:3001/submitInitial', QueryString.stringify(formDatas), config).then(function (response) {\n      if (response.data === \"Error\") {\n        alert(\"something went wrong. Try agin.. If you cant take the quiz again, contact the creator or our Dev team\");\n      } else {\n        if (response.data === \"Already Taken!\") {\n          alert(\"already taken.. redirecting to the dashboard\");\n          redirect(\"/ul/\" + uid + \"/\" + uname);\n        }\n      }\n    }).catch(function (error) {\n      alert(\"Connection lost.. Refresh\");\n    });\n  }, []); //function to validate the quiz--normal submit\n\n  const submitQuizDataHandler = event => {\n    event.preventDefault();\n    let flagSubmit = 0;\n\n    for (var i = 0; i < ansDone.length; i++) {\n      if (ansDone[i] === -1) {\n        alert(\"You forgot to Answer Question No:\" + (i + 1) + \". Please Answer all the questions to proceed\");\n        flagSubmit = 1;\n        break;\n      }\n    }\n\n    if (flagSubmit === 0) {\n      let scoreObtained = 0;\n\n      for (var i = 0; i < ansDone.length; i++) {\n        if (ansDone[i] === answers[i]) {\n          scoreObtained = scoreObtained + 1;\n        }\n      }\n\n      alert(\"submitting\"); // fullscreenFunc(\"exit\")\n      //check for the fullscreen is still turned on...\n      // forward to respective submit handlers\n      //create the axios here\n      // axios \n\n      let formData = {\n        QID: quizID,\n        UID: uid,\n        UName: uname,\n        Status: \"completed\",\n        Score: scoreObtained\n      }; // console.log(QueryString.stringify(formData));  \n      //header configuration for the CORS\n\n      const config = {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          'Access-Control-Allow-Origin': '*'\n        }\n      };\n      axios.post('http://localhost:3001/submitUpdate', QueryString.stringify(formData), config).then(function (response) {\n        //display the violation message and move to dashboard\n        //create a modal to show the message from server\n        setMessage(response.data);\n        handleShowMessage();\n      }).catch(function (error) {\n        alert(\"You have violated the terms. refresh to continue\");\n      });\n    }\n  }; //function violation submit\n\n\n  const violationSubmit = () => {\n    //submit data on terms of the violation\n    // axios \n    let formData = {\n      QID: quizID,\n      UID: uid,\n      UName: uname,\n      Status: \"violation\",\n      Score: 0\n    }; // console.log(QueryString.stringify(formData));  \n    //header configuration for the CORS\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Access-Control-Allow-Origin': '*'\n      }\n    };\n    axios.post('http://localhost:3001/submitUpdate', QueryString.stringify(formData), config).then(function (response) {//display the violation message and move to dashboard\n      //create a modal to show the violation message\n    }).catch(function (error) {\n      alert(\"You have violated the terms. refresh to continue\");\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(FullScreen, {\n    handle: screen1,\n    onChange: reportChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fullscreen-overflow-scroll\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quizzler-background-quiztime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card timer-custom px-2 pt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-secondary m-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }\n  }, \"Time left:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Clock, {\n    time: timer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container p-4 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card p-4 my-4 question-component text-center border-warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 21\n    }\n  }, quizData ? quizData.name : null), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 21\n    }\n  }, quizData ? quizData.relatedTo : null)), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 17\n    }\n  }, quizData && quizData.questions.map((entry, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card p-4  my-4 question-component\",\n      key: entry.No,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"text-secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 33\n      }\n    }, index + 1 + \") \", entry.question), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center my-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 33\n      }\n    }, entry.QImageLink !== \"\" ? /*#__PURE__*/React.createElement(\"img\", {\n      className: \"question-compoment-image center\",\n      src: entry.QImageLink,\n      alt: \"question reference image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 60\n      }\n    }) : null), /*#__PURE__*/React.createElement(\"div\", {\n      onChange: e => {\n        var tempAns = ansDone;\n        tempAns[index] = e.target.value;\n        setAnsDone(tempAns);\n        console.log(ansDone);\n      },\n      className: \"p-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-check my-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-check-input\",\n      name: \"question\" + index,\n      type: \"radio\",\n      id: \"q\" + index + \"-o1\",\n      value: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-check-label h5\",\n      htmlFor: \"q\" + index + \"-o1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 41\n      }\n    }, entry.option1)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-check my-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-check-input\",\n      name: \"question\" + index,\n      type: \"radio\",\n      id: \"q\" + index + \"-o2\",\n      value: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-check-label h5\",\n      htmlFor: \"q\" + index + \"-o2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 41\n      }\n    }, entry.option2)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-check my-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-check-input\",\n      name: \"question\" + index,\n      type: \"radio\",\n      id: \"q\" + index + \"-o3\",\n      value: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-check-label h5\",\n      htmlFor: \"q\" + index + \"-o3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 41\n      }\n    }, entry.option3)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-check my-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-check-input\",\n      name: \"question\" + index,\n      type: \"radio\",\n      id: \"q\" + index + \"-o4\",\n      value: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-check-label h5\",\n      htmlFor: \"q\" + index + \"-o4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 41\n      }\n    }, entry.option4))));\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card question-component\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-block btn-primary\",\n    onClick: e => {\n      submitQuizDataHandler(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 21\n    }\n  }, \"SUBMIT\")))), /*#__PURE__*/React.createElement(Modal, {\n    show: modalInstructions,\n    onHide: handleClose,\n    backdrop: \"static\",\n    keyboard: false,\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"text-danger my-4 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 17\n    }\n  }, \"Read the Conditions Carefully\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"text-secondary my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 19\n    }\n  }, \"Make sure you have a proper internet connection.\"), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"text-secondary my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 19\n    }\n  }, \"We won't monitor you, We have asked the help of your device to do the heavy lifing for us.\"), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"text-secondary my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 19\n    }\n  }, \"Dont answer any Calls while taking the quiz.\"), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"text-secondary my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 19\n    }\n  }, \"Dont try to switch between Applications while taking the quiz.\"), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"text-secondary my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 19\n    }\n  }, \"Taking part in any malpractice will lead to disqualification.\"), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"text-secondary my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 19\n    }\n  }, \"You can take a Quiz only once. So use it wisely.\"), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"text-secondary my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 19\n    }\n  }, \"You have already entered the Quiz, even if you quit from here It is considered as attended.\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-block btn-primary\",\n    type: \"button\",\n    onClick: () => {\n      handleClose();\n      setTimerActive(true);\n      fullscreenFunc(\"enter\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 17\n    }\n  }, \"AGREE\"))), /*#__PURE__*/React.createElement(Modal, {\n    show: modalMessage,\n    onHide: handleCloseMessage,\n    backdrop: \"static\",\n    keyboard: false,\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 13\n    }\n  }, \"Quizzler\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default React.memo(Quizzler); //create the submit handle\n//create the databse for the quiz submissions \n//modify the quiz submissions...//first --started, --malpractice, --completed..","map":{"version":3,"sources":["C:/Users/SHIVARAJ/Desktop/quizzlerGlobal/quizzler/src/layouts/Quizzler/Quizzler.js"],"names":["React","useCallback","useState","useEffect","axios","QueryString","FullScreen","useFullScreenHandle","Modal","useParams","useHistory","Clock","Quizzler","history","redirect","path","push","quizID","uid","uname","quizData","setQuizData","answers","setAnswers","ansDone","setAnsDone","timer","setTimer","timerActive","setTimerActive","fullscreen","setFullscreen","modalInstructions","setModalInstructions","handleClose","handleShow","message","setMessage","modalMessage","setModalMessage","handleCloseMessage","handleShowMessage","screen1","reportChange","state","handle","console","log","violationSubmit","fullscreenFunc","value","enter","exit","setTimeout","timeoutTrigger","alert","formData","ID","config","headers","post","stringify","then","response","data","time","ansScrapper","dummyfill","i","questions","length","answer","catch","error","formDatas","QID","UID","UName","Status","Score","submitQuizDataHandler","event","preventDefault","flagSubmit","scoreObtained","name","relatedTo","map","entry","index","No","question","QImageLink","e","tempAns","target","option1","option2","option3","option4","memo"],"mappings":"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","sourcesContent":["import React, {useCallback,useState,useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport * as QueryString from \"query-string\"\r\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\"\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport {useParams} from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Clock from './component/clock/clock'\r\nimport './quizzler.css'\r\n\r\nconst Quizzler=()=>{\r\n    let history = useHistory();\r\n    const redirect=(path)=>{\r\n        history.push(path)\r\n    }\r\n    \r\n    let {quizID,uid,uname}=useParams()\r\n    //states to hold the data\r\n    const [quizData,setQuizData]=useState(null)\r\n    //state for the answers from the server\r\n    const [answers,setAnswers]=useState(null)\r\n    //state to hold the answers done by user\r\n    const [ansDone,setAnsDone]=useState(null)\r\n    //state to hold the clock time\r\n    const [timer,setTimer] = useState(null)\r\n    const [timerActive,setTimerActive] = useState(false)  \r\n    //state to hold the full  screen state  \r\n    const [fullscreen,setFullscreen]=useState(false)\r\n\r\n    //state for the modal instructions\r\n    const [modalInstructions,setModalInstructions]=useState(true)\r\n    const handleClose = () => setModalInstructions(false);\r\n    const handleShow = () => setModalInstructions(true);\r\n\r\n    //state for the modal instructions\r\n    const  [message,setMessage] = useState(null)\r\n    const [modalMessage,setModalMessage]=useState(false)\r\n    const handleCloseMessage = () => setModalInstructions(false);\r\n    const handleShowMessage = () => setModalInstructions(true);\r\n    \r\n\r\n    // variable holding the full screen trigger\r\n    const screen1 = useFullScreenHandle();\r\n\r\n    // callback function from the react-fullscreen package\r\n    const reportChange = useCallback((state, handle) => {\r\n        if (handle === screen1) {\r\n          console.log('Screen 1 went to', state)\r\n          //handle is a function holding the active state , enter & exit function\r\n          console.log(\"handle \",handle)\r\n          //set the if condition here for the violation handle2\r\n          if(fullscreen ===true &&state===false){\r\n            //fullscreen is our handle... set at start and the end\r\n            //state is the current state held by the full screen component\r\n            console.log(\"violation due to exit full screen before the quiz ends\")\r\n            //submit for violation\r\n            violationSubmit()\r\n          }\r\n        }\r\n      }, [screen1]);\r\n\r\n    const fullscreenFunc=(value)=>{\r\n        if(value===\"enter\"){\r\n          //fullscreen flag is set to true\r\n          setFullscreen(true)\r\n          screen1.enter() \r\n        }\r\n        if(value===\"exit\"){\r\n          //fullscreen flag is set to false\r\n          setFullscreen(false)\r\n          screen1.exit()\r\n        }\r\n    }\r\n\r\n    //function for the timer countdown\r\n    useEffect(()=>{\r\n        if(timerActive){\r\n            timer > 0 && setTimeout(() => setTimer(timer - 1), 1000);\r\n            if(timer===0){\r\n                timeoutTrigger()\r\n            }\r\n        }  \r\n      },[timer,timerActive])\r\n    //function for the timeout trigger\r\n    const timeoutTrigger=()=>{\r\n        setTimerActive(false)\r\n        alert(\"timeout... saving progress\")\r\n    }\r\n\r\n    //function to fetch the quiz data on startup\r\n    useEffect(()=>{\r\n        // axios \r\n        let formData = {ID:quizID};    \r\n        // console.log(quizID);\r\n        //header configuration for the CORS\r\n        const config  = {\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded',\r\n                    'Access-Control-Allow-Origin':'*'\r\n                }}\r\n        axios.post('http://localhost:3001/fetchQuiz', \r\n        QueryString.stringify(formData),config)\r\n        .then(function (response) {\r\n            // console.log(response.data);\r\n            if(response.data !==\"Error\"){\r\n                setQuizData(response.data)\r\n                // console.log(response.data)\r\n                // console.log(response.data.time)\r\n                setTimer(response.data.time *60)\r\n\r\n                let ansScrapper=[]\r\n                let dummyfill=[]\r\n                for(var i=0;i<response.data.questions.length;i++){\r\n                    ansScrapper.push(response.data.questions[i].answer);\r\n                    // console.log(ansScrapper);\r\n                    dummyfill.push(-1)\r\n                }\r\n                setAnsDone(dummyfill)\r\n                setAnswers(ansScrapper)\r\n            }else{\r\n                alert(\"Cannot fetch the data from the Server... Error!! Refresh again.\")\r\n            }\r\n        })\r\n        .catch(function (error) {\r\n            alert(\"Error!! Check your Network and Try again.\")\r\n        });\r\n\r\n        //axios post to initially set the quiztaken to opened\r\n         // axios \r\n         let formDatas = {QID:quizID,UID:uid,UName:uname,Status:\"opened\",Score:0};    \r\n         // console.log(QueryString.stringify(formData));  \r\n                 axios.post('http://localhost:3001/submitInitial', \r\n                 QueryString.stringify(formDatas),config)\r\n                 .then(function (response) {\r\n                    if(response.data===\"Error\"){\r\n                        alert(\"something went wrong. Try agin.. If you cant take the quiz again, contact the creator or our Dev team\")\r\n                    }\r\n                    else{\r\n                        if(response.data===\"Already Taken!\"){\r\n                            alert(\"already taken.. redirecting to the dashboard\")\r\n                            redirect(\"/ul/\"+uid+\"/\"+uname);\r\n                        }\r\n                    }                        \r\n                 })\r\n                 .catch(function (error) {\r\n                     alert(\"Connection lost.. Refresh\")\r\n                 });\r\n    },[])\r\n\r\n    //function to validate the quiz--normal submit\r\n    const submitQuizDataHandler=(event)=>{\r\n        event.preventDefault();\r\n        let flagSubmit=0;\r\n        for(var i=0;i<ansDone.length;i++){\r\n            if(ansDone[i]===-1){\r\n                alert(\"You forgot to Answer Question No:\"+(i+1)+\". Please Answer all the questions to proceed\");\r\n                flagSubmit=1;\r\n                break;\r\n            }\r\n        }\r\n        if(flagSubmit===0){\r\n            let scoreObtained=0;\r\n            for(var i=0;i<ansDone.length;i++){\r\n                if(ansDone[i]===answers[i]){\r\n                    scoreObtained=scoreObtained+1\r\n                }\r\n            }\r\n            alert(\"submitting\");\r\n            // fullscreenFunc(\"exit\")\r\n            //check for the fullscreen is still turned on...\r\n            // forward to respective submit handlers\r\n            \r\n            //create the axios here\r\n             // axios \r\n             let formData = {QID:quizID,UID:uid,UName:uname,Status:\"completed\",Score:scoreObtained};    \r\n             // console.log(QueryString.stringify(formData));  \r\n             //header configuration for the CORS\r\n            const config  = {\r\n                headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                'Access-Control-Allow-Origin':'*'\r\n            }}\r\n            axios.post('http://localhost:3001/submitUpdate', \r\n            QueryString.stringify(formData),config)\r\n            .then(function (response) {\r\n               //display the violation message and move to dashboard\r\n               //create a modal to show the message from server\r\n                setMessage(response.data)\r\n                handleShowMessage()\r\n            })\r\n            .catch(function (error) {\r\n                alert(\"You have violated the terms. refresh to continue\")\r\n            });\r\n            }\r\n    }\r\n\r\n    //function violation submit\r\n    const violationSubmit=()=>{\r\n        //submit data on terms of the violation\r\n         // axios \r\n         let formData = {QID:quizID,UID:uid,UName:uname,Status:\"violation\",Score:0};    \r\n         // console.log(QueryString.stringify(formData));  \r\n         //header configuration for the CORS\r\n        const config  = {\r\n            headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n            'Access-Control-Allow-Origin':'*'\r\n        }}\r\n        axios.post('http://localhost:3001/submitUpdate', \r\n        QueryString.stringify(formData),config)\r\n        .then(function (response) {\r\n           //display the violation message and move to dashboard\r\n           //create a modal to show the violation message\r\n\r\n        })\r\n        .catch(function (error) {\r\n            alert(\"You have violated the terms. refresh to continue\")\r\n        });\r\n    }\r\n\r\n    return(\r\n        <FullScreen handle={screen1} onChange={reportChange}>\r\n        \r\n      \r\n        <div className=\"fullscreen-overflow-scroll\">\r\n            <div className=\"quizzler-background-quiztime\"></div>\r\n\r\n            {/* timer component */}\r\n            <div className=\"card timer-custom px-2 pt-2\">\r\n                <p className=\"text-secondary m-0\">Time left:</p>\r\n                <span className=\"text-center\">\r\n                    <Clock time={timer}/>\r\n                </span>                                                                    \r\n            </div>\r\n            {/* maximise to full screen .. */}\r\n            {/* populate all the quiz data here using the useEffect */}\r\n            \r\n            <div className=\"container p-4 \">\r\n                {/* quiz details card */}\r\n                <div className=\"card p-4 my-4 question-component text-center border-warning\">\r\n                    <h5 className=\"text-primary\">{quizData?quizData.name:null}</h5>\r\n                    <p className=\"text-secondary\">{quizData?quizData.relatedTo:null}</p>                    \r\n                </div>\r\n\r\n                <form>                \r\n                {quizData && quizData.questions.map((entry,index)=>{\r\n                    return(\r\n                        <div className=\"card p-4  my-4 question-component\" key={entry.No}>                            \r\n                                <h5 className=\"text-secondary\">{index+1+\") \"}{entry.question}</h5>\r\n                                <div className=\"text-center my-3\">\r\n                                    {entry.QImageLink!==\"\"?<img className=\"question-compoment-image center\" src={entry.QImageLink} alt=\"question reference image\"/>:null}                                    \r\n                                </div>\r\n\r\n                                <div \r\n                                    onChange={(e)=>{\r\n                                        var tempAns=ansDone\r\n                                        tempAns[index]=e.target.value\r\n                                        setAnsDone(tempAns)\r\n                                        console.log(ansDone)\r\n                                    }} \r\n                                    className=\"p-2\">\r\n                                    <div className=\"form-check my-2\">\r\n                                        <input className=\"form-check-input\" name={\"question\"+index} type=\"radio\" id={\"q\"+index+\"-o1\"} value=\"1\"/>\r\n                                        <label className=\"form-check-label h5\" htmlFor={\"q\"+index+\"-o1\"}>\r\n                                            {entry.option1}\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"form-check my-2\">\r\n                                        <input className=\"form-check-input\" name={\"question\"+index} type=\"radio\" id={\"q\"+index+\"-o2\"} value=\"2\" />\r\n                                        <label className=\"form-check-label h5\" htmlFor={\"q\"+index+\"-o2\"}>\r\n                                        {entry.option2}\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"form-check my-2\">\r\n                                        <input className=\"form-check-input\" name={\"question\"+index} type=\"radio\" id={\"q\"+index+\"-o3\"} value=\"3\" />\r\n                                        <label className=\"form-check-label h5\" htmlFor={\"q\"+index+\"-o3\"}>\r\n                                        {entry.option3}\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"form-check my-2\">\r\n                                        <input className=\"form-check-input\" name={\"question\"+index} type=\"radio\" id={\"q\"+index+\"-o4\"} value=\"4\" />\r\n                                        <label className=\"form-check-label h5\" htmlFor={\"q\"+index+\"-o4\"}>\r\n                                        {entry.option4}\r\n                                        </label>\r\n                                    </div>\r\n                                </div>               \r\n                        </div>\r\n                    )\r\n                })}\r\n                <div className=\"card question-component\">\r\n                    <button \r\n                        className=\"btn btn-block btn-primary\"\r\n                        onClick={(e)=>{\r\n                            submitQuizDataHandler(e)\r\n                        }}\r\n                        >SUBMIT</button>\r\n                </div>\r\n                </form>\r\n            </div>\r\n\r\n\r\n\r\n\r\n        {/* modal for the instructions */}\r\n            <Modal\r\n            show={modalInstructions}\r\n            onHide={handleClose}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n            centered\r\n            >\r\n            <Modal.Body>\r\n                <h4 className=\"text-danger my-4 text-center\">Read the Conditions Carefully</h4>\r\n                <hr/>\r\n                <ul>\r\n                  <li className=\"text-secondary my-2\">Make sure you have a proper internet connection.</li>\r\n                  <li className=\"text-secondary my-2\">We won't monitor you, We have asked the help of your device to do the heavy lifing for us.</li>\r\n                  <li className=\"text-secondary my-2\">Dont answer any Calls while taking the quiz.</li>\r\n                  <li className=\"text-secondary my-2\">Dont try to switch between Applications while taking the quiz.</li>\r\n                  <li className=\"text-secondary my-2\">Taking part in any malpractice will lead to disqualification.</li>\r\n                  <li className=\"text-secondary my-2\">You can take a Quiz only once. So use it wisely.</li>\r\n                  <li className=\"text-secondary my-2\">You have already entered the Quiz, even if you quit from here It is considered as attended.</li>\r\n                </ul>\r\n                <button \r\n                    className=\"btn btn-block btn-primary\" \r\n                    type=\"button\"\r\n                    onClick={()=>{\r\n                        handleClose()\r\n                        setTimerActive(true)\r\n                        fullscreenFunc(\"enter\")\r\n                    }}\r\n                    >AGREE</button>\r\n            </Modal.Body>\r\n        </Modal>\r\n\r\n        {/* modal for the message display messages */}\r\n        <Modal\r\n            show={modalMessage}\r\n            onHide={handleCloseMessage}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n            centered\r\n            >\r\n            <Modal.Header>\r\n            <Modal.Title>Quizzler</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                \r\n            </Modal.Body>\r\n        </Modal>\r\n        </div>\r\n        </FullScreen>\r\n    )\r\n}\r\n\r\nexport default React.memo(Quizzler)\r\n\r\n\r\n\r\n\r\n//create the submit handle\r\n//create the databse for the quiz submissions \r\n//modify the quiz submissions...//first --started, --malpractice, --completed.."]},"metadata":{},"sourceType":"module"}