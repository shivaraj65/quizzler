{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SHIVARAJ\\\\Desktop\\\\quizzlerGlobal\\\\quizzler\\\\src\\\\layouts\\\\userLobby\\\\UserLobby.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport Navbar from './navbar/navbarLanding';\nimport axios from 'axios';\nimport './userLobby.css';\n\nconst UserLobby = () => {\n  let {\n    uid,\n    uname\n  } = useParams(); //state for the storage of the quiz collection\n\n  const [quizData, setQuizData] = useState(null); //state for the storage of the \n\n  const [quizID, setQuizID] = useState(\"\"); //for the redirects- react-router-dom\n\n  let history = useHistory();\n\n  const redirect = path => {\n    history.push(path);\n  }; //submit handler for the quiz id\n\n\n  const SubmitQuizID = () => {\n    // axios \n    let formData = {\n      ID: quizID\n    }; //header configuration for the CORS\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      }\n    };\n    axios.post('http://localhost:3001/privateQuizID', formData, config).then(function (response) {\n      // console.log(response.data)\n      setQuizData(response.data);\n      setQuizID(\"\");\n    }).catch(function (error) {\n      alert(\"Check your Network Connection and try agin.\");\n    });\n  }; //submit handler for the public quizzes\n\n\n  const SubmitPublicQuizID = () => {\n    // axios \n    axios.get('http://localhost:3001/publicQuizData').then(function (response) {\n      setQuizData(response.data);\n      console.log(response.data);\n    }).catch(function (error) {\n      alert(\"Check your Network Connection and try agin.\");\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row nav-padding\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"m-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"card p-4 custom-findQuiz-bg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"text-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }\n  }, \"Already received a Quiz ID!\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 90\n    }\n  }), \" Enter it here.\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"inputQuizID\",\n    className: \"form-control text-primary\",\n    placeholder: \"Quiz ID\",\n    value: quizID,\n    required: true,\n    onChange: e => {\n      setQuizID(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-lg btn-primary btn-block mt-3\",\n    onClick: e => {\n      e.preventDefault();\n\n      if (quizID === \"\") {\n        alert(\"enter the ID to check\");\n      } else {\n        SubmitQuizID();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }, \"Find\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-center my-4 text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, \"or\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card p-4 custom-background-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"text-center text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, \"Attend from our wide range of public Quizzes.\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-lg btn-outline-primary btn-block mt-3\",\n    onClick: e => {\n      e.preventDefault();\n      SubmitPublicQuizID(); // console.log(\"params value \"+uid+\" \"+uname)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, \"Search Public Quizzes\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, quizData && quizData.map((entry, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card py-2 px-4 my-4 custom-background-2\",\n      key: entry._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-8 pt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"text-secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 41\n      }\n    }, \"Quiz name: \", entry.name), /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"text-secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 41\n      }\n    }, \"Realted to: \", entry.relatedTo), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 41\n      }\n    }, \"Created by: \", entry.hostedBy)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-block btn-success mt-4\",\n      value: entry._id,\n      onClick: e => {\n        //function to trigger to the next page with the corresponding ID\n        redirect(\"/q/\" + e.target.value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 37\n      }\n    }, \"START\"))));\n  })))));\n};\n\nexport default React.memo(UserLobby); // map the quiz data at the line 75\n//set useEffect to fill public quizzes at the start\n//optimise the endpoint to just provide the required info","map":{"version":3,"sources":["C:/Users/SHIVARAJ/Desktop/quizzlerGlobal/quizzler/src/layouts/userLobby/UserLobby.js"],"names":["React","useState","useEffect","useHistory","useParams","Navbar","axios","UserLobby","uid","uname","quizData","setQuizData","quizID","setQuizID","history","redirect","path","push","SubmitQuizID","formData","ID","config","headers","post","then","response","data","catch","error","alert","SubmitPublicQuizID","get","console","log","e","target","value","preventDefault","map","entry","index","_id","name","relatedTo","hostedBy","memo"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport Navbar from './navbar/navbarLanding'\r\nimport axios from 'axios'\r\nimport './userLobby.css'\r\n\r\nconst UserLobby=()=>{\r\n    let {uid,uname}=useParams()\r\n    //state for the storage of the quiz collection\r\n    const [quizData,setQuizData]=useState(null);\r\n    //state for the storage of the \r\n    const [quizID,setQuizID]=useState(\"\");\r\n\r\n    //for the redirects- react-router-dom\r\n    let history = useHistory();\r\n    const redirect=(path)=>{\r\n        history.push(path)\r\n    }\r\n    //submit handler for the quiz id\r\n    const SubmitQuizID=()=>{\r\n         // axios \r\n         let formData = {ID:quizID};    \r\n         //header configuration for the CORS\r\n         const config  = {\r\n                 headers: {\r\n                     'Content-Type': 'application/json',\r\n                     'Access-Control-Allow-Origin':'*'\r\n                 }}\r\n        axios.post('http://localhost:3001/privateQuizID',formData,config) \r\n        .then(function (response) {\r\n            // console.log(response.data)\r\n            setQuizData(response.data)\r\n            setQuizID(\"\")\r\n        })\r\n        .catch(function (error) {\r\n            alert(\"Check your Network Connection and try agin.\")\r\n        });\r\n    }\r\n\r\n    //submit handler for the public quizzes\r\n    const SubmitPublicQuizID=()=>{\r\n        // axios \r\n        axios.get('http://localhost:3001/publicQuizData')\r\n          .then(function (response) {\r\n            setQuizData(response.data)\r\n            console.log(response.data)\r\n          })\r\n          .catch(function (error) {\r\n            alert(\"Check your Network Connection and try agin.\")\r\n          })\r\n   }\r\n\r\n    return(\r\n        <div>\r\n        <div className=\"user-background\"></div>\r\n        <div className=\"container\">\r\n        \r\n            <Navbar/>\r\n            <div className=\"row nav-padding\">\r\n\r\n                <div className=\"col-lg-4\">\r\n                    <div className=\"m-4\">\r\n                        <form className=\"card p-4 custom-findQuiz-bg\">\r\n                            <label className=\"text-secondary\">Already received a Quiz ID!<br/> Enter it here.</label>\r\n                            <input \r\n                                type=\"text\" \r\n                                id=\"inputQuizID\" \r\n                                className=\"form-control text-primary\" \r\n                                placeholder=\"Quiz ID\" \r\n                                value={quizID}\r\n                                required \r\n                                onChange={(e)=>{\r\n                                    setQuizID(e.target.value);\r\n                                }}    \r\n                            />\r\n                            <button \r\n                                className=\"btn btn-lg btn-primary btn-block mt-3\" \r\n                                onClick={(e)=>{\r\n                                    e.preventDefault()\r\n                                    if(quizID===\"\"){\r\n                                        alert(\"enter the ID to check\")\r\n                                    }else{\r\n                                        SubmitQuizID()\r\n                                    }\r\n                                }}\r\n                            >Find</button>\r\n                        </form>\r\n                        <p className=\"text-center my-4 text-muted\">or</p>\r\n                        <div className=\"card p-4 custom-background-1\">\r\n                        <h6 className=\"text-center text-muted\">Attend from our wide range of public Quizzes.</h6>\r\n                        <button \r\n                            className=\"btn btn-lg btn-outline-primary btn-block mt-3\" \r\n                            onClick={(e)=>{\r\n                                    e.preventDefault()                                  \r\n                                    SubmitPublicQuizID()\r\n                                    // console.log(\"params value \"+uid+\" \"+uname)\r\n                                }}\r\n                            >Search Public Quizzes</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-lg-8\">\r\n                    \r\n                    {quizData && quizData.map((entry,index)=>{\r\n                        return(\r\n                            <div className=\"card py-2 px-4 my-4 custom-background-2\" key={entry._id}>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-8 pt-4\">\r\n                                        <h5 className=\"text-secondary\">Quiz name: {entry.name}</h5>\r\n                                        <h6 className=\"text-secondary\">Realted to: {entry.relatedTo}</h6>\r\n                                        <p className=\"text-primary\">Created by: {entry.hostedBy}</p>\r\n                                    </div>\r\n                                    <div className=\"col-md-4\">\r\n                                    <button \r\n                                        className=\"btn btn-block btn-success mt-4\"\r\n                                        value={entry._id}\r\n                                        onClick={(e)=>{\r\n                                            //function to trigger to the next page with the corresponding ID\r\n                                            redirect(\"/q/\"+e.target.value)\r\n                                        }}\r\n                                    >START</button>\r\n                                    {/* <p className=\"text-danger text-center\">Already taken.</p> */}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n\r\n                </div>            \r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\nexport default React.memo(UserLobby)\r\n\r\n// map the quiz data at the line 75\r\n//set useEffect to fill public quizzes at the start\r\n//optimise the endpoint to just provide the required info"]},"metadata":{},"sourceType":"module"}