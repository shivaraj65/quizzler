{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SHIVARAJ\\\\Desktop\\\\quizzlerGlobal\\\\quizzler\\\\src\\\\layouts\\\\Quizzler\\\\Quizzler.js\";\nimport React, { useCallback, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport * as QueryString from \"query-string\";\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\";\nimport Modal from 'react-bootstrap/Modal';\nimport { useParams } from \"react-router-dom\";\nimport Clock from './component/clock/clock';\nimport './quizzler.css';\n\nconst Quizzler = () => {\n  let {\n    quizID\n  } = useParams(); //states to hold the data\n\n  const [quizData, setQuizData] = useState(null); //state for the answers from the server\n\n  const [answers, setAnswers] = useState(null); //state to hold the answers done by user\n\n  const [ansDone, setAnsDone] = useState(null); //state to hold the clock time\n\n  const [timer, setTimer] = useState(null);\n  const [timerActive, setTimerActive] = useState(false); //state for the modal instructions\n\n  const [modalInstructions, setModalInstructions] = useState(true);\n\n  const handleClose = () => setModalInstructions(false);\n\n  const handleShow = () => setModalInstructions(true); // variable holding the full screen trigger\n\n\n  const handle = useFullScreenHandle(); //callback function from the react-fullscreen package\n  // const reportChange = useCallback((state, handle) => {\n  //     if (handle === screen1) {\n  //       console.log('Screen 1 went to', state, handle)\n  //       //set the if condition here for the violation handle2\n  //       if(fullscreen ===true &&state===false){\n  //         // submitHandle()\n  //       }\n  //     }\n  //   }, [screen1]);\n  // const fullscreenFunc=(value)=>{\n  //     if(value===\"enter\"){\n  //       //fullscreen flag is set to true\n  //       setFullscreen(true)\n  //       screen1.enter() \n  //     }\n  //     if(value===\"exit\"){\n  //       //fullscreen flag is set to false\n  //       setFullscreen(false)\n  //       screen1.exit()\n  //     }\n  // }\n  //function for the timer countdown\n\n  useEffect(() => {\n    if (timerActive) {\n      timer > 0 && setTimeout(() => setTimer(timer - 1), 1000);\n\n      if (timer === 0) {\n        timeoutTrigger();\n      }\n    }\n  }, [timer, timerActive]); //function for the timeout trigger\n\n  const timeoutTrigger = () => {\n    setTimerActive(false);\n    alert(\"timeout... saving progress\");\n  }; //function to fetch the quiz data on startup\n\n\n  useEffect(() => {\n    // axios \n    let formData = {\n      ID: quizID\n    }; // console.log(quizID);\n    //header configuration for the CORS\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Access-Control-Allow-Origin': '*'\n      }\n    };\n    axios.post('http://localhost:3001/fetchQuiz', QueryString.stringify(formData), config).then(function (response) {\n      // console.log(response.data);\n      if (response.data !== \"Error\") {\n        setQuizData(response.data); // console.log(response.data)\n        // console.log(response.data.time)\n\n        setTimer(response.data.time * 60);\n        let ansScrapper = [];\n        let dummyfill = [];\n\n        for (var i = 0; i < response.data.questions.length; i++) {\n          ansScrapper.push(response.data.questions[i].answer); // console.log(ansScrapper);\n\n          dummyfill.push(-1);\n        }\n\n        setAnsDone(dummyfill);\n        setAnswers(ansScrapper);\n      } else {\n        alert(\"Cannot fetch the data from the Server... Error!! Refresh again.\");\n      }\n    }).catch(function (error) {\n      alert(\"Error!! Check your Network and Try again.\");\n    });\n  }, []); //function to validate the quiz\n\n  const submitQuizDataHandler = event => {\n    event.preventDefault();\n    let flagSubmit = 0;\n    console.log(ansDone[0]);\n    const checkData = ansDone;\n    console.log(checkData.length);\n\n    for (var i = 0; i < ansDone.length; i++) {\n      console.log(\"...\");\n\n      if (checkData[iter] === -1) {\n        alert(\"You forgot to Answer Question No:\" + iter + 1 + \". Please Answer all the questions to proceed\");\n        flagSubmit = 1;\n        break;\n      }\n    } // for(var iter=0;iter<checkData.lenght;iter++){\n    //     if(checkData[iter]===-1){\n    //         alert(\"You forgot to Answer Question No:\"+iter+1+\". Please Answer all the questions to proceed\");\n    //         flagSubmit=1;\n    //         break;\n    //     }\n    // }\n    // if(flagSubmit===0){\n    //     alert(\"submitting\");\n    // }\n\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quizzler-background-quiztime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card timer-custom px-2 pt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-secondary m-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, \"Time left:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Clock, {\n    time: timer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container p-4 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card p-4 my-4 question-component text-center border-warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }\n  }, quizData ? quizData.name : null), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }, quizData ? quizData.relatedTo : null)), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, quizData && quizData.questions.map((entry, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card p-4  my-4 question-component\",\n      key: entry.No,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"text-secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 33\n      }\n    }, index + 1 + \") \", entry.question), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center my-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 33\n      }\n    }, entry.QImageLink !== \"\" ? /*#__PURE__*/React.createElement(\"img\", {\n      className: \"question-compoment-image center\",\n      src: entry.QImageLink,\n      alt: \"question reference image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 60\n      }\n    }) : null), /*#__PURE__*/React.createElement(\"div\", {\n      onChange: e => {\n        var tempAns = ansDone;\n        tempAns[index] = e.target.value;\n        setAnsDone(tempAns);\n        console.log(ansDone);\n      },\n      className: \"p-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-check my-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-check-input\",\n      name: \"question\" + index,\n      type: \"radio\",\n      id: \"q\" + index + \"-o1\",\n      value: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-check-label h5\",\n      htmlFor: \"q\" + index + \"-o1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 41\n      }\n    }, entry.option1)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-check my-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-check-input\",\n      name: \"question\" + index,\n      type: \"radio\",\n      id: \"q\" + index + \"-o2\",\n      value: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-check-label h5\",\n      htmlFor: \"q\" + index + \"-o2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 41\n      }\n    }, entry.option2)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-check my-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-check-input\",\n      name: \"question\" + index,\n      type: \"radio\",\n      id: \"q\" + index + \"-o3\",\n      value: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-check-label h5\",\n      htmlFor: \"q\" + index + \"-o3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 41\n      }\n    }, entry.option3)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-check my-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-check-input\",\n      name: \"question\" + index,\n      type: \"radio\",\n      id: \"q\" + index + \"-o4\",\n      value: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-check-label h5\",\n      htmlFor: \"q\" + index + \"-o4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 41\n      }\n    }, entry.option4))));\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card question-component\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-block btn-primary\",\n    onClick: e => {\n      submitQuizDataHandler(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 21\n    }\n  }, \"SUBMIT\")))), /*#__PURE__*/React.createElement(Modal, {\n    show: modalInstructions,\n    onHide: handleClose,\n    backdrop: \"static\",\n    keyboard: false,\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"text-danger my-4 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }\n  }, \"Read the Conditions Carefully\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"text-secondary my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 19\n    }\n  }, \"Make sure you have a proper internet connection.\"), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"text-secondary my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 19\n    }\n  }, \"We won't monitor you, We have asked the help of your device to do the heavy lifing for us.\"), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"text-secondary my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 19\n    }\n  }, \"Dont answer any Calls while taking the quiz.\"), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"text-secondary my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 19\n    }\n  }, \"Dont try to switch between Applications while taking the quiz.\"), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"text-secondary my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 19\n    }\n  }, \"Taking part in any malpractice will lead to disqualification.\"), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"text-secondary my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 19\n    }\n  }, \"You can take a Quiz only once. So use it wisely.\"), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"text-secondary my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 19\n    }\n  }, \"You have already entered the Quiz, even if you quit from here It is considered as attended.\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-block btn-primary\",\n    type: \"button\",\n    onClick: () => {\n      handleClose();\n      setTimerActive(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }\n  }, \"AGREE\"))));\n};\n\nexport default React.memo(Quizzler); //submit validator\n//create the submit handle\n//create the databse for the quiz submissions \n//modify the quiz submissions...//first --started, --malpractice, --completed..","map":{"version":3,"sources":["C:/Users/SHIVARAJ/Desktop/quizzlerGlobal/quizzler/src/layouts/Quizzler/Quizzler.js"],"names":["React","useCallback","useState","useEffect","axios","QueryString","FullScreen","useFullScreenHandle","Modal","useParams","Clock","Quizzler","quizID","quizData","setQuizData","answers","setAnswers","ansDone","setAnsDone","timer","setTimer","timerActive","setTimerActive","modalInstructions","setModalInstructions","handleClose","handleShow","handle","setTimeout","timeoutTrigger","alert","formData","ID","config","headers","post","stringify","then","response","data","time","ansScrapper","dummyfill","i","questions","length","push","answer","catch","error","submitQuizDataHandler","event","preventDefault","flagSubmit","console","log","checkData","iter","name","relatedTo","map","entry","index","No","question","QImageLink","e","tempAns","target","value","option1","option2","option3","option4","memo"],"mappings":"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","sourcesContent":["import React, {useCallback,useState,useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport * as QueryString from \"query-string\"\r\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\"\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nimport Clock from './component/clock/clock'\r\nimport './quizzler.css'\r\n\r\nconst Quizzler=()=>{\r\n    let {quizID}=useParams()\r\n    //states to hold the data\r\n    const [quizData,setQuizData]=useState(null)\r\n    //state for the answers from the server\r\n    const [answers,setAnswers]=useState(null)\r\n    //state to hold the answers done by user\r\n    const [ansDone,setAnsDone]=useState(null)\r\n    //state to hold the clock time\r\n    const [timer,setTimer] = useState(null)\r\n    const [timerActive,setTimerActive] = useState(false)    \r\n\r\n    //state for the modal instructions\r\n    const [modalInstructions,setModalInstructions]=useState(true)\r\n    const handleClose = () => setModalInstructions(false);\r\n    const handleShow = () => setModalInstructions(true);\r\n\r\n    \r\n\r\n    // variable holding the full screen trigger\r\n    const handle = useFullScreenHandle();\r\n\r\n    //callback function from the react-fullscreen package\r\n    // const reportChange = useCallback((state, handle) => {\r\n    //     if (handle === screen1) {\r\n    //       console.log('Screen 1 went to', state, handle)\r\n    //       //set the if condition here for the violation handle2\r\n    //       if(fullscreen ===true &&state===false){\r\n    //         // submitHandle()\r\n    //       }\r\n    //     }\r\n    //   }, [screen1]);\r\n\r\n    // const fullscreenFunc=(value)=>{\r\n    //     if(value===\"enter\"){\r\n    //       //fullscreen flag is set to true\r\n    //       setFullscreen(true)\r\n    //       screen1.enter() \r\n    //     }\r\n    //     if(value===\"exit\"){\r\n    //       //fullscreen flag is set to false\r\n    //       setFullscreen(false)\r\n    //       screen1.exit()\r\n    //     }\r\n    // }\r\n\r\n    //function for the timer countdown\r\n    useEffect(()=>{\r\n        if(timerActive){\r\n            timer > 0 && setTimeout(() => setTimer(timer - 1), 1000);\r\n            if(timer===0){\r\n                timeoutTrigger()\r\n            }\r\n        }  \r\n      },[timer,timerActive])\r\n    //function for the timeout trigger\r\n    const timeoutTrigger=()=>{\r\n        setTimerActive(false)\r\n        alert(\"timeout... saving progress\")\r\n    }\r\n\r\n    //function to fetch the quiz data on startup\r\n    useEffect(()=>{\r\n        // axios \r\n        let formData = {ID:quizID};    \r\n        // console.log(quizID);\r\n        //header configuration for the CORS\r\n        const config  = {\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded',\r\n                    'Access-Control-Allow-Origin':'*'\r\n                }}\r\n        axios.post('http://localhost:3001/fetchQuiz', \r\n        QueryString.stringify(formData),config)\r\n        .then(function (response) {\r\n            // console.log(response.data);\r\n            if(response.data !==\"Error\"){\r\n                setQuizData(response.data)\r\n                // console.log(response.data)\r\n                // console.log(response.data.time)\r\n                setTimer(response.data.time *60)\r\n\r\n                let ansScrapper=[]\r\n                let dummyfill=[]\r\n                for(var i=0;i<response.data.questions.length;i++){\r\n                    ansScrapper.push(response.data.questions[i].answer);\r\n                    // console.log(ansScrapper);\r\n                    dummyfill.push(-1)\r\n                }\r\n                setAnsDone(dummyfill)\r\n                setAnswers(ansScrapper)\r\n            }else{\r\n                alert(\"Cannot fetch the data from the Server... Error!! Refresh again.\")\r\n            }\r\n        })\r\n        .catch(function (error) {\r\n            alert(\"Error!! Check your Network and Try again.\")\r\n        });\r\n    },[])\r\n\r\n    //function to validate the quiz\r\n    const submitQuizDataHandler=(event)=>{\r\n        event.preventDefault();\r\n        let flagSubmit=0;\r\n        console.log(ansDone[0])\r\n        const checkData=ansDone\r\n        console.log(checkData.length)\r\n        for(var i=0;i<ansDone.length;i++){\r\n            console.log(\"...\")\r\n            if(checkData[iter]===-1){\r\n                alert(\"You forgot to Answer Question No:\"+iter+1+\". Please Answer all the questions to proceed\");\r\n                flagSubmit=1;\r\n                break;\r\n            }\r\n        }\r\n        // for(var iter=0;iter<checkData.lenght;iter++){\r\n            \r\n        //     if(checkData[iter]===-1){\r\n        //         alert(\"You forgot to Answer Question No:\"+iter+1+\". Please Answer all the questions to proceed\");\r\n        //         flagSubmit=1;\r\n        //         break;\r\n        //     }\r\n        // }\r\n        // if(flagSubmit===0){\r\n        //     alert(\"submitting\");\r\n        // }\r\n    }\r\n\r\n    return(\r\n        <div className=\"\">\r\n            <div className=\"quizzler-background-quiztime\"></div>\r\n\r\n            {/* timer component */}\r\n            <div className=\"card timer-custom px-2 pt-2\">\r\n                <p className=\"text-secondary m-0\">Time left:</p>\r\n                <span className=\"text-center\">\r\n                    <Clock time={timer}/>\r\n                </span>                                                                    \r\n            </div>\r\n            {/* maximise to full screen .. */}\r\n            {/* populate all the quiz data here using the useEffect */}\r\n            \r\n            <div className=\"container p-4 \">\r\n                {/* quiz details card */}\r\n                <div className=\"card p-4 my-4 question-component text-center border-warning\">\r\n                    <h5 className=\"text-primary\">{quizData?quizData.name:null}</h5>\r\n                    <p className=\"text-secondary\">{quizData?quizData.relatedTo:null}</p>                    \r\n                </div>\r\n\r\n                <form>                \r\n                {quizData && quizData.questions.map((entry,index)=>{\r\n                    return(\r\n                        <div className=\"card p-4  my-4 question-component\" key={entry.No}>                            \r\n                                <h5 className=\"text-secondary\">{index+1+\") \"}{entry.question}</h5>\r\n                                <div className=\"text-center my-3\">\r\n                                    {entry.QImageLink!==\"\"?<img className=\"question-compoment-image center\" src={entry.QImageLink} alt=\"question reference image\"/>:null}                                    \r\n                                </div>\r\n\r\n                                <div \r\n                                    onChange={(e)=>{\r\n                                        var tempAns=ansDone\r\n                                        tempAns[index]=e.target.value\r\n                                        setAnsDone(tempAns)\r\n                                        console.log(ansDone)\r\n                                    }} \r\n                                    className=\"p-2\">\r\n                                    <div className=\"form-check my-2\">\r\n                                        <input className=\"form-check-input\" name={\"question\"+index} type=\"radio\" id={\"q\"+index+\"-o1\"} value=\"1\"/>\r\n                                        <label className=\"form-check-label h5\" htmlFor={\"q\"+index+\"-o1\"}>\r\n                                            {entry.option1}\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"form-check my-2\">\r\n                                        <input className=\"form-check-input\" name={\"question\"+index} type=\"radio\" id={\"q\"+index+\"-o2\"} value=\"2\" />\r\n                                        <label className=\"form-check-label h5\" htmlFor={\"q\"+index+\"-o2\"}>\r\n                                        {entry.option2}\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"form-check my-2\">\r\n                                        <input className=\"form-check-input\" name={\"question\"+index} type=\"radio\" id={\"q\"+index+\"-o3\"} value=\"3\" />\r\n                                        <label className=\"form-check-label h5\" htmlFor={\"q\"+index+\"-o3\"}>\r\n                                        {entry.option3}\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"form-check my-2\">\r\n                                        <input className=\"form-check-input\" name={\"question\"+index} type=\"radio\" id={\"q\"+index+\"-o4\"} value=\"4\" />\r\n                                        <label className=\"form-check-label h5\" htmlFor={\"q\"+index+\"-o4\"}>\r\n                                        {entry.option4}\r\n                                        </label>\r\n                                    </div>\r\n                                </div>               \r\n                        </div>\r\n                    )\r\n                })}\r\n                <div className=\"card question-component\">\r\n                    <button \r\n                        className=\"btn btn-block btn-primary\"\r\n                        onClick={(e)=>{\r\n                            submitQuizDataHandler(e)\r\n                        }}\r\n                        >SUBMIT</button>\r\n                </div>\r\n                </form>\r\n            </div>\r\n\r\n\r\n\r\n\r\n        {/* modal for the instructions */}\r\n            <Modal\r\n            show={modalInstructions}\r\n            onHide={handleClose}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n            centered\r\n            >\r\n            <Modal.Body>\r\n                <h4 className=\"text-danger my-4 text-center\">Read the Conditions Carefully</h4>\r\n                <hr/>\r\n                <ul>\r\n                  <li className=\"text-secondary my-2\">Make sure you have a proper internet connection.</li>\r\n                  <li className=\"text-secondary my-2\">We won't monitor you, We have asked the help of your device to do the heavy lifing for us.</li>\r\n                  <li className=\"text-secondary my-2\">Dont answer any Calls while taking the quiz.</li>\r\n                  <li className=\"text-secondary my-2\">Dont try to switch between Applications while taking the quiz.</li>\r\n                  <li className=\"text-secondary my-2\">Taking part in any malpractice will lead to disqualification.</li>\r\n                  <li className=\"text-secondary my-2\">You can take a Quiz only once. So use it wisely.</li>\r\n                  <li className=\"text-secondary my-2\">You have already entered the Quiz, even if you quit from here It is considered as attended.</li>\r\n                </ul>\r\n                <button \r\n                    className=\"btn btn-block btn-primary\" \r\n                    type=\"button\"\r\n                    onClick={()=>{\r\n                        handleClose()\r\n                        setTimerActive(true)\r\n                    }}\r\n                    >AGREE</button>\r\n            </Modal.Body>\r\n        </Modal>\r\n        </div>\r\n\r\n       \r\n\r\n    )\r\n}\r\n\r\nexport default React.memo(Quizzler)\r\n\r\n\r\n\r\n//submit validator\r\n//create the submit handle\r\n//create the databse for the quiz submissions \r\n//modify the quiz submissions...//first --started, --malpractice, --completed.."]},"metadata":{},"sourceType":"module"}